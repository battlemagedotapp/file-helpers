{"version":3,"sources":["../../src/components/ui/button.tsx","../../src/lib/utils.ts","../../src/image/view/ImageViewProviderContext.tsx","../../src/image/view/ImageView.tsx","../../src/image/uploader/multiple-image/MultiImageCropUploader.tsx","../../src/components/ui/alert-dialog.tsx","../../src/image/uploader/ConfirmAlertDialog.tsx","../../src/image/uploader/imageProcessingUtils.ts","../../src/components/ui/dialog.tsx","../../src/image/uploader/multiple-image/ImageCropDialog.tsx","../../src/image/uploader/multiple-image/MultiImageUploader.tsx","../../src/image/uploader/single-image/SingleImageCropUploader.tsx","../../src/image/uploader/single-image/SingleImageCropDialog.tsx","../../src/image/uploader/single-image/SingleImageUploader.tsx","../../src/image/view/ImageViewProvider.tsx"],"sourcesContent":["import { Slot } from '@radix-ui/react-slot'\r\nimport { cva, type VariantProps } from 'class-variance-authority'\r\nimport * as React from 'react'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          'bg-primary text-primary-foreground shadow-xs hover:bg-primary/90',\r\n        destructive:\r\n          'bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60',\r\n        outline:\r\n          'border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50',\r\n        secondary:\r\n          'bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80',\r\n        ghost:\r\n          'hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50',\r\n        link: 'text-primary underline-offset-4 hover:underline',\r\n      },\r\n      size: {\r\n        default: 'h-9 px-4 py-2 has-[>svg]:px-3',\r\n        sm: 'h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5',\r\n        lg: 'h-10 rounded-md px-6 has-[>svg]:px-4',\r\n        icon: 'size-9',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n      size: 'default',\r\n    },\r\n  },\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<'button'> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean\r\n  }) {\r\n  const Comp = asChild ? Slot : 'button'\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n","import { clsx, type ClassValue } from 'clsx'\r\nimport { twMerge } from 'tailwind-merge'\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n","import { createContext, useContext } from 'react'\r\n\r\nexport type TransformImageUrlFn = (storageId: string) => string\r\n\r\nconst defaultTransform: TransformImageUrlFn = (storageId: string) => storageId\r\n\r\nconst ImageViewContext = createContext<{\r\n  transformImageUrlFn: TransformImageUrlFn\r\n}>({\r\n  transformImageUrlFn: defaultTransform,\r\n})\r\n\r\nexport const useImageView = () => useContext(ImageViewContext)\r\n\r\nexport default ImageViewContext\r\n","import { Button } from '@/components/ui/button'\r\nimport { useImageView } from '@/image/view/ImageViewProviderContext'\r\nimport { cn } from '@/lib/utils'\r\nimport { Ellipsis, X } from 'lucide-react'\r\nimport { useState } from 'react'\r\nimport { TransformComponent, TransformWrapper } from 'react-zoom-pan-pinch'\r\n\r\ntype ImageViewProps = {\r\n  src: string\r\n  alt: string\r\n  canExpand?: boolean\r\n  className?: string\r\n  externalImageUrlFn?: (url: string) => string\r\n}\r\n\r\nexport function ImageView({\r\n  src,\r\n  alt,\r\n  canExpand = true,\r\n  className,\r\n  externalImageUrlFn,\r\n}: ImageViewProps) {\r\n  const [status, setStatus] = useState<'loading' | 'loaded' | 'error'>(\r\n    'loading',\r\n  )\r\n  const [imgClassNames, setImgClassNames] = useState<object>({\r\n    width: '100%',\r\n    height: '100%',\r\n    objectFit: 'cover',\r\n  })\r\n  const [isOpen, setIsOpen] = useState<boolean>(false)\r\n  const { transformImageUrlFn } = useImageView()\r\n  const imageSrc = externalImageUrlFn\r\n    ? externalImageUrlFn(src)\r\n    : transformImageUrlFn(src)\r\n  return (\r\n    <div className={cn('w-full h-full relative select-none', className)}>\r\n      <img\r\n        src={imageSrc}\r\n        alt={alt}\r\n        style={imgClassNames}\r\n        className={canExpand ? 'hover:cursor-pointer' : ''}\r\n        onClick={() => {\r\n          if (canExpand && status === 'loaded') setIsOpen(true)\r\n        }}\r\n        onLoad={() => {\r\n          setStatus('loaded')\r\n          setImgClassNames({\r\n            width: '100%',\r\n            height: '100%',\r\n            objectFit: 'cover',\r\n          })\r\n        }}\r\n        onError={() => {\r\n          setStatus('error')\r\n          setImgClassNames({\r\n            width: '0',\r\n            height: '0',\r\n            objectFit: 'cover',\r\n          })\r\n        }}\r\n      />\r\n      {status === 'loading' && (\r\n        <div className=\"absolute inset-0 flex items-center justify-center\">\r\n          <Ellipsis className=\"h-4 w-4 animate-pulse\" />\r\n        </div>\r\n      )}\r\n      {status === 'error' && (\r\n        <div className=\"absolute inset-0 flex items-center justify-center\">\r\n          <X className=\"h-4 w-4\" />\r\n        </div>\r\n      )}\r\n\r\n      {isOpen && status === 'loaded' && (\r\n        <div\r\n          className=\"fixed inset-0  backdrop-blur-2xl z-50 flex items-center justify-center\"\r\n          onClick={() => setIsOpen(false)}\r\n        >\r\n          <TransformWrapper\r\n            wheel={{ step: 0.5 }}\r\n            pinch={{ disabled: false }}\r\n            doubleClick={{ disabled: true }}\r\n          >\r\n            <TransformComponent\r\n              wrapperStyle={{ width: '100%', height: '100%' }}\r\n            >\r\n              <div\r\n                className=\"relative max-w-full max-h-full p-4\"\r\n                onClick={(e) => e.stopPropagation()}\r\n              >\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"secondary\"\r\n                  size=\"icon\"\r\n                  className=\"cursor-pointer absolute top-2 right-2 hover:bg-primary hover:text-primary-foreground\"\r\n                  onClick={() => setIsOpen(false)}\r\n                >\r\n                  <X className=\"h-4 w-4\" />\r\n                </Button>\r\n                <img\r\n                  src={imageSrc}\r\n                  alt={alt}\r\n                  className=\"max-w-[90vw] max-h-[90vh] object-contain\"\r\n                />\r\n              </div>\r\n            </TransformComponent>\r\n          </TransformWrapper>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { Button } from '@/components/ui/button'\r\nimport { ImageView } from '@/image/view/ImageView'\r\nimport { cn } from '@/lib/utils'\r\nimport { useFileUpload } from '@battlemagedotapp/convex-upload-helpers'\r\nimport { ImagePlus, LoaderCircle, Trash } from 'lucide-react'\r\nimport { useRef, useState } from 'react'\r\nimport { toast } from 'sonner'\r\nimport ConfirmAlertDialog from '../ConfirmAlertDialog'\r\nimport {\r\n  processImages,\r\n  type CompressionOptions,\r\n  type ProcessedImageData,\r\n} from '../imageProcessingUtils'\r\nimport { ImageCropDialog } from './ImageCropDialog'\r\n\r\ntype MultiImageCropUploaderProps = {\r\n  imageFields: { id: string; value: string }[]\r\n  appendImage: (f: { value: string }) => void\r\n  removeImage: (index: number) => void\r\n  maxFiles: number\r\n  maxSizeInMB: number\r\n  allowedTypes: string[]\r\n  successMessage: string\r\n  errorMessage: string\r\n  previewImageListClassName?: string\r\n  previewImageItemClassName?: string\r\n  compressionOptions?: CompressionOptions\r\n}\r\n\r\nexport function MultiImageCropUploader({\r\n  imageFields,\r\n  appendImage,\r\n  removeImage,\r\n  maxFiles,\r\n  maxSizeInMB,\r\n  allowedTypes,\r\n  successMessage,\r\n  errorMessage,\r\n  previewImageListClassName,\r\n  previewImageItemClassName,\r\n  compressionOptions,\r\n}: MultiImageCropUploaderProps) {\r\n  const [cropDialogOpen, setCropDialogOpen] = useState(false)\r\n  const [pendingFiles, setPendingFiles] = useState<File[]>([])\r\n  const [isUploading, setIsUploading] = useState(false)\r\n  const fileInputRef = useRef<HTMLInputElement>(null)\r\n\r\n  const { uploadFile, deleteFile } = useFileUpload({\r\n    maxSizeInMB,\r\n    allowedTypes,\r\n    successMessage,\r\n    errorMessage,\r\n  })\r\n\r\n  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = event.target.files\r\n    if (!files || files.length === 0) return\r\n\r\n    const filesArray = Array.from(files)\r\n    const remaining = Math.max(0, maxFiles - imageFields.length)\r\n\r\n    if (remaining <= 0) {\r\n      if (fileInputRef.current) fileInputRef.current.value = ''\r\n      return\r\n    }\r\n\r\n    if (filesArray.length > remaining) {\r\n      filesArray.splice(remaining)\r\n    }\r\n\r\n    setPendingFiles(filesArray)\r\n    setCropDialogOpen(true)\r\n\r\n    if (fileInputRef.current) fileInputRef.current.value = ''\r\n  }\r\n\r\n  const handleCropDialogUpload = async (\r\n    processedImages: ProcessedImageData[],\r\n  ) => {\r\n    try {\r\n      setIsUploading(true)\r\n\r\n      const processedFiles = await processImages(\r\n        processedImages,\r\n        compressionOptions,\r\n      )\r\n\r\n      for (const file of processedFiles) {\r\n        const storageId = await uploadFile(file)\r\n        appendImage({ value: storageId })\r\n      }\r\n    } catch (error) {\r\n      console.error('Error processing images:', error)\r\n      toast.error(\r\n        error instanceof Error ? error.message : 'Failed to process images',\r\n      )\r\n    } finally {\r\n      setIsUploading(false)\r\n    }\r\n  }\r\n\r\n  const handleFileDelete = async (index: number) => {\r\n    try {\r\n      const storageId = imageFields[index].value\r\n      if (storageId && !storageId.startsWith('data:')) {\r\n        await deleteFile({ storageId: storageId })\r\n      }\r\n      removeImage(index)\r\n    } catch (error) {\r\n      console.error('Error deleting file:', error)\r\n      removeImage(index)\r\n    }\r\n  }\r\n\r\n  const triggerFileSelect = () => {\r\n    fileInputRef.current?.click()\r\n  }\r\n\r\n  const canAddMore = imageFields.length < maxFiles\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col gap-2\">\r\n        <input\r\n          ref={fileInputRef}\r\n          type=\"file\"\r\n          multiple\r\n          onChange={handleFileSelect}\r\n          className=\"hidden\"\r\n          accept={allowedTypes.join(',')}\r\n        />\r\n        <Button\r\n          disabled={isUploading || !canAddMore}\r\n          variant=\"default\"\r\n          size=\"default\"\r\n          className=\"w-fit\"\r\n          onClick={triggerFileSelect}\r\n        >\r\n          {isUploading ? (\r\n            <LoaderCircle className=\"h-4 w-4 animate-spin\" />\r\n          ) : (\r\n            <ImagePlus className=\"h-4 w-4\" />\r\n          )}\r\n          {isUploading ? 'Uploading...' : 'Add image(s)'}\r\n        </Button>\r\n        <p className=\"text-sm text-muted-foreground\">\r\n          Maximum {maxFiles} images allowed\r\n        </p>\r\n        {imageFields.length > 0 && (\r\n          <div\r\n            className={cn(\r\n              'flex flex-row flex-nowrap h-64 overflow-x-scroll show-scrollbar',\r\n              previewImageListClassName,\r\n            )}\r\n          >\r\n            {imageFields.map((field, index) => (\r\n              <div\r\n                key={field.id}\r\n                className=\"shrink-0 h-full relative aspect-square p-4\"\r\n              >\r\n                <ImageView\r\n                  src={field.value}\r\n                  alt={`Image ${index + 1}`}\r\n                  className={cn(\r\n                    'rounded-lg overflow-hidden',\r\n                    previewImageItemClassName,\r\n                  )}\r\n                />\r\n                <div className=\"absolute top-2 right-2\">\r\n                  <ConfirmAlertDialog\r\n                    trigger={(props) => (\r\n                      <Button\r\n                        {...props}\r\n                        type=\"button\"\r\n                        variant=\"secondary\"\r\n                        size=\"icon\"\r\n                        className=\"cursor-pointer hover:bg-destructive hover:text-destructive-foreground\"\r\n                      >\r\n                        <Trash className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    )}\r\n                    title=\"Delete image\"\r\n                    description=\"Are you sure you want to delete this image? This action cannot be undone.\"\r\n                    confirmLabel=\"Delete\"\r\n                    cancelLabel=\"Cancel\"\r\n                    onConfirm={() => handleFileDelete(index)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <ImageCropDialog\r\n        open={cropDialogOpen}\r\n        onOpenChange={setCropDialogOpen}\r\n        files={pendingFiles}\r\n        onUpload={handleCropDialogUpload}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import * as AlertDialogPrimitive from '@radix-ui/react-alert-dialog'\r\nimport * as React from 'react'\r\n\r\nimport { buttonVariants } from '@/components/ui/button'\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction AlertDialog({\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Root>) {\r\n  return <AlertDialogPrimitive.Root data-slot=\"alert-dialog\" {...props} />\r\n}\r\n\r\nfunction AlertDialogTrigger({\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Trigger>) {\r\n  return (\r\n    <AlertDialogPrimitive.Trigger data-slot=\"alert-dialog-trigger\" {...props} />\r\n  )\r\n}\r\n\r\nfunction AlertDialogPortal({\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Portal>) {\r\n  return (\r\n    <AlertDialogPrimitive.Portal data-slot=\"alert-dialog-portal\" {...props} />\r\n  )\r\n}\r\n\r\nfunction AlertDialogOverlay({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Overlay>) {\r\n  return (\r\n    <AlertDialogPrimitive.Overlay\r\n      data-slot=\"alert-dialog-overlay\"\r\n      className={cn(\r\n        'data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50',\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction AlertDialogContent({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Content>) {\r\n  return (\r\n    <AlertDialogPortal>\r\n      <AlertDialogOverlay />\r\n      <AlertDialogPrimitive.Content\r\n        data-slot=\"alert-dialog-content\"\r\n        className={cn(\r\n          'bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg',\r\n          className,\r\n        )}\r\n        {...props}\r\n      />\r\n    </AlertDialogPortal>\r\n  )\r\n}\r\n\r\nfunction AlertDialogHeader({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<'div'>) {\r\n  return (\r\n    <div\r\n      data-slot=\"alert-dialog-header\"\r\n      className={cn('flex flex-col gap-2 text-center sm:text-left', className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction AlertDialogFooter({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<'div'>) {\r\n  return (\r\n    <div\r\n      data-slot=\"alert-dialog-footer\"\r\n      className={cn(\r\n        'flex flex-col-reverse gap-2 sm:flex-row sm:justify-end',\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction AlertDialogTitle({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Title>) {\r\n  return (\r\n    <AlertDialogPrimitive.Title\r\n      data-slot=\"alert-dialog-title\"\r\n      className={cn('text-lg font-semibold', className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction AlertDialogDescription({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Description>) {\r\n  return (\r\n    <AlertDialogPrimitive.Description\r\n      data-slot=\"alert-dialog-description\"\r\n      className={cn('text-muted-foreground text-sm', className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction AlertDialogAction({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Action>) {\r\n  return (\r\n    <AlertDialogPrimitive.Action\r\n      className={cn(buttonVariants(), className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction AlertDialogCancel({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Cancel>) {\r\n  return (\r\n    <AlertDialogPrimitive.Cancel\r\n      className={cn(buttonVariants({ variant: 'outline' }), className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  AlertDialog,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogOverlay,\r\n  AlertDialogPortal,\r\n  AlertDialogTitle,\r\n  AlertDialogTrigger,\r\n}\r\n","import {\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n  AlertDialogTrigger,\r\n  AlertDialog as BaseAlertDialog,\r\n} from '@/components/ui/alert-dialog'\r\nimport * as React from 'react'\r\n\r\ntype ConfirmAlertDialogProps = {\r\n  title?: string\r\n  description?: string\r\n  trigger?: React.ReactNode | ((props: React.ComponentProps<typeof AlertDialogTrigger>) => React.ReactNode)\r\n  onConfirm: () => void\r\n  confirmLabel?: string\r\n  cancelLabel?: string\r\n}\r\n\r\nexport function ConfirmAlertDialog({\r\n  title = 'Are you sure?',\r\n  description = 'This action cannot be undone.',\r\n  trigger,\r\n  onConfirm,\r\n  confirmLabel = 'Continue',\r\n  cancelLabel = 'Cancel',\r\n}: ConfirmAlertDialogProps) {\r\n  return (\r\n    <BaseAlertDialog>\r\n      {trigger ? (\r\n        typeof trigger === 'function' ? (\r\n          <AlertDialogTrigger asChild>\r\n            {trigger({} as React.ComponentProps<typeof AlertDialogTrigger>)}\r\n          </AlertDialogTrigger>\r\n        ) : (\r\n          <AlertDialogTrigger asChild>\r\n            {trigger}\r\n          </AlertDialogTrigger>\r\n        )\r\n      ) : null}\r\n      <AlertDialogContent>\r\n        <AlertDialogHeader>\r\n          <AlertDialogTitle>{title}</AlertDialogTitle>\r\n          <AlertDialogDescription>{description}</AlertDialogDescription>\r\n        </AlertDialogHeader>\r\n        <AlertDialogFooter>\r\n          <AlertDialogCancel>{cancelLabel}</AlertDialogCancel>\r\n          <AlertDialogAction onClick={onConfirm}>\r\n            {confirmLabel}\r\n          </AlertDialogAction>\r\n        </AlertDialogFooter>\r\n      </AlertDialogContent>\r\n    </BaseAlertDialog>\r\n  )\r\n}\r\n\r\nexport default ConfirmAlertDialog\r\n","import imageCompression from 'browser-image-compression'\r\nimport { type Crop } from 'react-image-crop'\r\n\r\nexport interface ProcessedImageData {\r\n  id: string\r\n  file: File\r\n  crop?: Crop\r\n  rotation: number\r\n}\r\n\r\nexport interface CompressionOptions {\r\n  maxSizeMB: number\r\n  maxWidthOrHeight: number\r\n  useWebWorker?: boolean\r\n  onProgress?: (progress: number) => void\r\n  preserveExif?: boolean\r\n  signal?: AbortSignal\r\n  maxIteration?: number\r\n  exifOrientation?: number\r\n  fileType?: string\r\n  initialQuality?: number\r\n  alwaysKeepResolution?: boolean\r\n}\r\n\r\nconst SUPPORTED_IMAGE_TYPES = [\r\n  'image/jpeg',\r\n  'image/jpg',\r\n  'image/png',\r\n  'image/webp',\r\n  'image/bmp',\r\n]\r\n\r\nexport function isImageTypeSupported(fileType: string): boolean {\r\n  return SUPPORTED_IMAGE_TYPES.includes(fileType.toLowerCase())\r\n}\r\n\r\nexport async function compressImage(\r\n  file: File,\r\n  options: CompressionOptions,\r\n): Promise<File> {\r\n  if (!isImageTypeSupported(file.type)) {\r\n    console.log(\r\n      `Skipping compression for ${file.name} (${file.type}) - type not supported`,\r\n    )\r\n    return file\r\n  }\r\n\r\n  try {\r\n    console.log(`Compressing ${file.name} (${file.type})`)\r\n    const compressedFile = await imageCompression(file, options)\r\n    console.log(`Successfully compressed ${file.name}`)\r\n    return compressedFile\r\n  } catch (error) {\r\n    console.warn(\r\n      `Failed to compress ${file.name}: ${error instanceof Error ? error.message : 'Unknown error'}`,\r\n    )\r\n    return file\r\n  }\r\n}\r\n\r\nexport function processImage(\r\n  file: File,\r\n  crop?: Crop,\r\n  rotation: number = 0,\r\n  compressionOptions?: CompressionOptions,\r\n): Promise<File> {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image()\r\n    img.onload = () => {\r\n      try {\r\n        const canvas = document.createElement('canvas')\r\n        const ctx = canvas.getContext('2d')\r\n\r\n        if (!ctx) {\r\n          reject(new Error('Could not get canvas context'))\r\n          return\r\n        }\r\n\r\n        const rotatedWidth = rotation % 180 === 0 ? img.width : img.height\r\n        const rotatedHeight = rotation % 180 === 0 ? img.height : img.width\r\n\r\n        canvas.width = rotatedWidth\r\n        canvas.height = rotatedHeight\r\n\r\n        ctx.translate(canvas.width / 2, canvas.height / 2)\r\n        ctx.rotate((rotation * Math.PI) / 180)\r\n        ctx.drawImage(img, -img.width / 2, -img.height / 2)\r\n\r\n        if (crop && crop.width > 0 && crop.height > 0) {\r\n          const cropCanvas = document.createElement('canvas')\r\n          const cropCtx = cropCanvas.getContext('2d')\r\n\r\n          if (!cropCtx) {\r\n            reject(new Error('Could not get crop canvas context'))\r\n            return\r\n          }\r\n\r\n          const cropX = (crop.x * rotatedWidth) / 100\r\n          const cropY = (crop.y * rotatedHeight) / 100\r\n          const cropWidth = (crop.width * rotatedWidth) / 100\r\n          const cropHeight = (crop.height * rotatedHeight) / 100\r\n\r\n          cropCanvas.width = cropWidth\r\n          cropCanvas.height = cropHeight\r\n\r\n          cropCtx.drawImage(\r\n            canvas,\r\n            cropX,\r\n            cropY,\r\n            cropWidth,\r\n            cropHeight,\r\n            0,\r\n            0,\r\n            cropWidth,\r\n            cropHeight,\r\n          )\r\n\r\n          cropCanvas.toBlob(\r\n            async (blob) => {\r\n              if (blob) {\r\n                let processedFile = new File([blob], file.name, {\r\n                  type: file.type,\r\n                  lastModified: Date.now(),\r\n                })\r\n\r\n                if (compressionOptions) {\r\n                  processedFile = await compressImage(\r\n                    processedFile,\r\n                    compressionOptions,\r\n                  )\r\n                }\r\n\r\n                resolve(processedFile)\r\n              } else {\r\n                reject(new Error('Failed to create blob'))\r\n              }\r\n            },\r\n            file.type,\r\n            0.9,\r\n          )\r\n        } else {\r\n          canvas.toBlob(\r\n            async (blob) => {\r\n              if (blob) {\r\n                let processedFile = new File([blob], file.name, {\r\n                  type: file.type,\r\n                  lastModified: Date.now(),\r\n                })\r\n\r\n                if (compressionOptions) {\r\n                  processedFile = await compressImage(\r\n                    processedFile,\r\n                    compressionOptions,\r\n                  )\r\n                }\r\n\r\n                resolve(processedFile)\r\n              } else {\r\n                reject(new Error('Failed to create blob'))\r\n              }\r\n            },\r\n            file.type,\r\n            0.9,\r\n          )\r\n        }\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    }\r\n\r\n    img.onerror = () => {\r\n      reject(new Error('Failed to load image'))\r\n    }\r\n\r\n    img.src = URL.createObjectURL(file)\r\n  })\r\n}\r\n\r\nexport async function processImages(\r\n  processedImages: ProcessedImageData[],\r\n  compressionOptions?: CompressionOptions,\r\n): Promise<File[]> {\r\n  const processedFiles = await Promise.all(\r\n    processedImages.map(({ file, crop, rotation }) =>\r\n      processImage(file, crop, rotation, compressionOptions),\r\n    ),\r\n  )\r\n  return processedFiles\r\n}\r\n","import * as React from 'react'\r\nimport * as DialogPrimitive from '@radix-ui/react-dialog'\r\nimport { XIcon } from 'lucide-react'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction Dialog({\r\n  ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\r\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\r\n}\r\n\r\nfunction DialogTrigger({\r\n  ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\r\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\r\n}\r\n\r\nfunction DialogPortal({\r\n  ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\r\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\r\n}\r\n\r\nfunction DialogClose({\r\n  ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\r\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\r\n}\r\n\r\nfunction DialogOverlay({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\r\n  return (\r\n    <DialogPrimitive.Overlay\r\n      data-slot=\"dialog-overlay\"\r\n      className={cn(\r\n        'data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50',\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction DialogContent({\r\n  className,\r\n  children,\r\n  showCloseButton = true,\r\n  ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Content> & {\r\n  showCloseButton?: boolean\r\n}) {\r\n  return (\r\n    <DialogPortal data-slot=\"dialog-portal\">\r\n      <DialogOverlay />\r\n      <DialogPrimitive.Content\r\n        data-slot=\"dialog-content\"\r\n        className={cn(\r\n          'bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg',\r\n          className,\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n        {showCloseButton && (\r\n          <DialogPrimitive.Close\r\n            data-slot=\"dialog-close\"\r\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\r\n          >\r\n            <XIcon />\r\n            <span className=\"sr-only\">Close</span>\r\n          </DialogPrimitive.Close>\r\n        )}\r\n      </DialogPrimitive.Content>\r\n    </DialogPortal>\r\n  )\r\n}\r\n\r\nfunction DialogHeader({ className, ...props }: React.ComponentProps<'div'>) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-header\"\r\n      className={cn('flex flex-col gap-2 text-center sm:text-left', className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction DialogFooter({ className, ...props }: React.ComponentProps<'div'>) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-footer\"\r\n      className={cn(\r\n        'flex flex-col-reverse gap-2 sm:flex-row sm:justify-end',\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction DialogTitle({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\r\n  return (\r\n    <DialogPrimitive.Title\r\n      data-slot=\"dialog-title\"\r\n      className={cn('text-lg leading-none font-semibold', className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction DialogDescription({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\r\n  return (\r\n    <DialogPrimitive.Description\r\n      data-slot=\"dialog-description\"\r\n      className={cn('text-muted-foreground text-sm', className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Dialog,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogOverlay,\r\n  DialogPortal,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n}\r\n","import { Button } from '@/components/ui/button'\nimport {\n  Dialog,\n  DialogContent,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog'\nimport { cn } from '@/lib/utils'\nimport { RotateCw, Upload, X } from 'lucide-react'\nimport React, { useCallback, useRef, useState } from 'react'\nimport ReactCrop, { type Crop, type PercentCrop } from 'react-image-crop'\nimport 'react-image-crop/dist/ReactCrop.css'\n\ninterface ImageData {\n  id: string\n  file: File\n  url: string\n  rotatedUrl: string\n  crop?: Crop\n  rotation: number\n}\n\ninterface ImageCropDialogProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  files: File[]\n  onUpload: (\n    processedImages: {\n      id: string\n      file: File\n      crop?: Crop\n      rotation: number\n    }[],\n  ) => void\n}\n\nexport function ImageCropDialog({\n  open,\n  onOpenChange,\n  files,\n  onUpload,\n}: ImageCropDialogProps) {\n  const [images, setImages] = useState<ImageData[]>([])\n  const [selectedImageIndex, setSelectedImageIndex] = useState(0)\n  const [crops, setCrops] = useState<(Crop | undefined)[]>([])\n  const [rotations, setRotations] = useState<number[]>([])\n  const imgRefs = useRef<(HTMLImageElement | null)[]>([])\n\n  const createRotatedImage = useCallback((imageUrl: string, rotation: number): Promise<string> => {\n    return new Promise((resolve) => {\n      const img = new Image()\n      img.onload = () => {\n        const canvas = document.createElement('canvas')\n        const ctx = canvas.getContext('2d')!\n\n        const isVertical = rotation % 180 === 90\n        const width = isVertical ? img.height : img.width\n        const height = isVertical ? img.width : img.height\n\n        canvas.width = width\n        canvas.height = height\n\n        ctx.translate(width / 2, height / 2)\n        ctx.rotate((rotation * Math.PI) / 180)\n        ctx.drawImage(img, -img.width / 2, -img.height / 2)\n\n        const rotatedUrl = canvas.toDataURL('image/jpeg', 0.9)\n        resolve(rotatedUrl)\n      }\n      img.src = imageUrl\n    })\n  }, [])\n\n  React.useEffect(() => {\n    if (files.length > 0) {\n      const newImages: ImageData[] = files.map((file, index) => ({\n        id: `img-${index}`,\n        file,\n        url: URL.createObjectURL(file),\n        rotatedUrl: '',\n        rotation: 0,\n      }))\n      setImages(newImages)\n      setCrops(new Array(files.length).fill(undefined))\n      setRotations(new Array(files.length).fill(0))\n      setSelectedImageIndex(0)\n      imgRefs.current = new Array(files.length).fill(null)\n    }\n  }, [files])\n\n  React.useEffect(() => {\n    const initializeRotatedImages = async () => {\n      const updatedImages = await Promise.all(\n        images.map(async (image) => {\n          const freshUrl = URL.createObjectURL(image.file)\n          try {\n            const rotatedUrl = await createRotatedImage(freshUrl, image.rotation)\n            return { ...image, rotatedUrl }\n          } finally {\n            URL.revokeObjectURL(freshUrl)\n          }\n        })\n      )\n      setImages(updatedImages)\n    }\n\n    if (images.length > 0 && images[0].rotatedUrl === '') {\n      initializeRotatedImages()\n    }\n  }, [images, createRotatedImage])\n\n  const updateRotatedImage = useCallback(async (index: number, newRotation: number) => {\n    setImages((prev) => {\n      const image = prev[index]\n      if (image) {\n        const freshUrl = URL.createObjectURL(image.file)\n        createRotatedImage(freshUrl, newRotation).then((rotatedUrl) => {\n          URL.revokeObjectURL(freshUrl)\n          setImages((currentImages) => {\n            const newImages = [...currentImages]\n            newImages[index] = { ...newImages[index], rotatedUrl, rotation: newRotation }\n            return newImages\n          })\n        }).catch(() => {\n          URL.revokeObjectURL(freshUrl)\n        })\n      }\n      return prev\n    })\n  }, [createRotatedImage])\n\n  React.useEffect(() => {\n    return () => {\n      images.forEach((image) => {\n        URL.revokeObjectURL(image.url)\n      })\n    }\n  }, [images])\n\n  const handleCropChange = useCallback(\n    (crop: Crop, percentCrop: PercentCrop, index: number) => {\n      setCrops((prev) => {\n        const newCrops = [...prev]\n        newCrops[index] = percentCrop\n        return newCrops\n      })\n    },\n    [],\n  )\n\n  const handleRotate = useCallback((index: number) => {\n    const newRotation = (rotations[index] + 90) % 360\n    setRotations((prev) => {\n      const newRotations = [...prev]\n      newRotations[index] = newRotation\n      return newRotations\n    })\n    updateRotatedImage(index, newRotation)\n  }, [rotations, updateRotatedImage])\n\n  const handleUnselectCrop = useCallback((index: number) => {\n    setCrops((prev) => {\n      const newCrops = [...prev]\n      newCrops[index] = undefined\n      return newCrops\n    })\n  }, [])\n\n  const handleRemoveImage = useCallback(\n    (index: number) => {\n      setImages((prev) => prev.filter((_, i) => i !== index))\n      setCrops((prev) => prev.filter((_, i) => i !== index))\n      setRotations((prev) => prev.filter((_, i) => i !== index))\n\n      if (selectedImageIndex >= index && selectedImageIndex > 0) {\n        setSelectedImageIndex((prev) => prev - 1)\n      } else if (selectedImageIndex === index && index === images.length - 1) {\n        setSelectedImageIndex((prev) => Math.max(0, prev - 1))\n      }\n    },\n    [selectedImageIndex, images.length],\n  )\n\n  const handleUpload = useCallback(() => {\n    const processedImages = images.map((image, index) => ({\n      id: image.id,\n      file: image.file,\n      crop: crops[index],\n      rotation: rotations[index],\n    }))\n    onUpload(processedImages)\n    onOpenChange(false)\n  }, [images, crops, rotations, onUpload, onOpenChange])\n\n  const selectedImage = images[selectedImageIndex]\n  const selectedCrop = crops[selectedImageIndex]\n\n  if (images.length === 0) return null\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-hidden flex flex-col\">\n        <DialogHeader>\n          <DialogTitle>Edit Images</DialogTitle>\n        </DialogHeader>\n\n        <div className=\"flex-1 flex flex-col gap-4 overflow-hidden select-none\">\n          <div className=\"shrink-0 flex flex-row gap-2 h-24 overflow-x-auto pb-2\">\n            {images.map((image, index) => (\n              <div\n                key={image.id}\n                className={cn(\n                  'relative shrink-0 cursor-pointer border-2 rounded-lg overflow-hidden',\n                  selectedImageIndex === index\n                    ? 'border-primary'\n                    : 'border-border hover:border-primary/50',\n                )}\n                onClick={() => setSelectedImageIndex(index)}\n              >\n                <img\n                  src={image.rotatedUrl || image.url}\n                  alt={`Image ${index + 1}`}\n                  className=\"aspect-square h-full object-contain\"\n                />\n                <Button\n                  type=\"button\"\n                  variant=\"destructive\"\n                  size=\"icon\"\n                  className=\"absolute top-1 right-1 h-6 w-6\"\n                  onClick={(e) => {\n                    e.stopPropagation()\n                    handleRemoveImage(index)\n                  }}\n                >\n                  <X className=\"h-3 w-3\" />\n                </Button>\n              </div>\n            ))}\n          </div>\n          <div className=\"flex-1 flex flex-col gap-4 overflow-hidden\">\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"text-sm font-medium\">\n                Image {selectedImageIndex + 1} of {images.length}\n              </h3>\n              <div className=\"flex gap-2\">\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handleUnselectCrop(selectedImageIndex)}\n                  disabled={!selectedCrop}\n                >\n                  Unselect\n                </Button>\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handleRotate(selectedImageIndex)}\n                >\n                  <RotateCw className=\"h-4 w-4\" />\n                  Rotate\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                height: '100%',\n                overflow: 'scroll',\n              }}\n            >\n              {selectedImage && (\n                <ReactCrop\n                  crop={selectedCrop}\n                  onChange={(crop, percentCrop) =>\n                    handleCropChange(crop, percentCrop, selectedImageIndex)\n                  }\n                  aspect={undefined}\n                  minWidth={5}\n                  minHeight={5}\n                  keepSelection\n                >\n                  <img\n                    ref={(el) => {\n                      imgRefs.current[selectedImageIndex] = el\n                    }}\n                    src={selectedImage.rotatedUrl || selectedImage.url}\n                    alt={`Selected image ${selectedImageIndex + 1}`}\n                    className=\"h-full w-auto object-contain\"\n                  />\n                </ReactCrop>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <DialogFooter>\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={() => onOpenChange(false)}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={handleUpload}\n            disabled={images.length === 0}\n          >\n            <Upload className=\"h-4 w-4\" />\n            Upload All ({images.length})\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import { Button } from '@/components/ui/button'\r\nimport { ImageView } from '@/image/view/ImageView'\r\nimport { cn } from '@/lib/utils'\r\nimport { MultipleFileUploaderHeadless } from '@battlemagedotapp/convex-upload-helpers'\r\nimport { ImagePlus, LoaderCircle, Trash } from 'lucide-react'\r\nimport ConfirmAlertDialog from '../ConfirmAlertDialog'\r\n\r\ntype MultiImageUploaderProps = {\r\n  imageFields: { id: string; value: string }[]\r\n  appendImage: (f: { value: string }) => void\r\n  removeImage: (index: number) => void\r\n  maxFiles: number\r\n  maxSizeInMB: number\r\n  allowedTypes: string[]\r\n  successMessage: string\r\n  errorMessage: string\r\n  previewImageListClassName?: string\r\n  previewImageItemClassName?: string\r\n}\r\n\r\nexport function MultiImageUploader({\r\n  imageFields,\r\n  appendImage,\r\n  removeImage,\r\n  maxFiles,\r\n  maxSizeInMB,\r\n  allowedTypes,\r\n  successMessage,\r\n  errorMessage,\r\n  previewImageListClassName,\r\n  previewImageItemClassName,\r\n}: MultiImageUploaderProps) {\r\n  return (\r\n    <MultipleFileUploaderHeadless\r\n      fileFields={imageFields}\r\n      appendFile={appendImage}\r\n      removeFile={removeImage}\r\n      maxFiles={maxFiles}\r\n      maxSizeInMB={maxSizeInMB}\r\n      allowedTypes={allowedTypes}\r\n      successMessage={successMessage}\r\n      errorMessage={errorMessage}\r\n    >\r\n      {({ isUploading, triggerFileSelect, handleFileDelete, canAddMore }) => (\r\n        <div className=\"flex flex-col gap-2\">\r\n          <Button\r\n            disabled={isUploading || !canAddMore}\r\n            variant=\"default\"\r\n            size=\"default\"\r\n            className=\"w-fit\"\r\n            onClick={triggerFileSelect}\r\n          >\r\n            {isUploading ? (\r\n              <LoaderCircle className=\"h-4 w-4 animate-spin\" />\r\n            ) : (\r\n              <ImagePlus className=\"h-4 w-4\" />\r\n            )}\r\n            {isUploading ? 'Uploading...' : 'Add image(s)'}\r\n          </Button>\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            Maximum {maxFiles} images allowed\r\n          </p>\r\n          {imageFields.length > 0 && (\r\n            <div\r\n              className={cn(\r\n                'flex flex-row flex-nowrap h-64 overflow-x-scroll show-scrollbar',\r\n                previewImageListClassName,\r\n              )}\r\n            >\r\n              {imageFields.map((field, index) => (\r\n                <div\r\n                  key={field.id}\r\n                  className=\"shrink-0 h-full relative aspect-square p-4\"\r\n                >\r\n                  <ImageView\r\n                    src={field.value}\r\n                    alt={`Image ${index + 1}`}\r\n                    className={cn(\r\n                      'rounded-lg overflow-hidden',\r\n                      previewImageItemClassName,\r\n                    )}\r\n                  />\r\n                  <div className=\"absolute top-2 right-2\">\r\n                    <ConfirmAlertDialog\r\n                      trigger={(props) => (\r\n                        <Button\r\n                          {...props}\r\n                          type=\"button\"\r\n                          variant=\"secondary\"\r\n                          size=\"icon\"\r\n                          className=\"cursor-pointer hover:bg-destructive hover:text-destructive-foreground\"\r\n                        >\r\n                          <Trash className=\"h-4 w-4\" />\r\n                        </Button>\r\n                      )}\r\n                      title=\"Delete image\"\r\n                      description=\"Are you sure you want to delete this image? This action cannot be undone.\"\r\n                      confirmLabel=\"Delete\"\r\n                      cancelLabel=\"Cancel\"\r\n                      onConfirm={() => handleFileDelete(index)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </MultipleFileUploaderHeadless>\r\n  )\r\n}\r\n","import { Button } from '@/components/ui/button'\r\nimport { ImageView } from '@/image/view/ImageView'\r\nimport { cn } from '@/lib/utils'\r\nimport { useFileUpload } from '@battlemagedotapp/convex-upload-helpers'\r\nimport { ImagePlus, LoaderCircle, Trash } from 'lucide-react'\r\nimport { useRef, useState } from 'react'\r\nimport { toast } from 'sonner'\r\nimport ConfirmAlertDialog from '../ConfirmAlertDialog'\r\nimport {\r\n  processImage,\r\n  type CompressionOptions,\r\n} from '../imageProcessingUtils'\r\nimport { SingleImageCropDialog } from './SingleImageCropDialog'\r\n\r\ntype SingleImageCropUploaderProps = {\r\n  file?: string | null\r\n  setFile: (f: string) => void\r\n  removeFile: () => void\r\n  maxSizeInMB?: number\r\n  allowedTypes?: string[]\r\n  successMessage?: string\r\n  errorMessage?: string\r\n  className?: string\r\n  imageClassName?: string\r\n  compressionOptions?: CompressionOptions\r\n}\r\n\r\nexport function SingleImageCropUploader({\r\n  file,\r\n  setFile,\r\n  removeFile,\r\n  maxSizeInMB,\r\n  allowedTypes = [],\r\n  successMessage = 'File uploaded successfully!',\r\n  errorMessage = 'Failed to upload file',\r\n  className,\r\n  imageClassName,\r\n  compressionOptions,\r\n}: SingleImageCropUploaderProps) {\r\n  const [cropDialogOpen, setCropDialogOpen] = useState(false)\r\n  const [pendingFile, setPendingFile] = useState<File | null>(null)\r\n  const [isUploading, setIsUploading] = useState(false)\r\n  const fileInputRef = useRef<HTMLInputElement>(null)\r\n\r\n  const { uploadFile, deleteFile } = useFileUpload({\r\n    maxSizeInMB,\r\n    allowedTypes,\r\n    successMessage,\r\n    errorMessage,\r\n  })\r\n\r\n  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = event.target.files\r\n    if (!files || files.length === 0) return\r\n\r\n    const filesArray = Array.from(files)\r\n    const selectedFile = filesArray[0]\r\n\r\n    setPendingFile(selectedFile)\r\n    setCropDialogOpen(true)\r\n\r\n    if (fileInputRef.current) fileInputRef.current.value = ''\r\n  }\r\n\r\n  const handleCropDialogUpload = async (processedImage: {\r\n    id: string\r\n    file: File\r\n    crop?: import('react-image-crop').Crop\r\n    rotation: number\r\n  }) => {\r\n    try {\r\n      setIsUploading(true)\r\n\r\n      const processedFile = await processImage(\r\n        processedImage.file,\r\n        processedImage.crop,\r\n        processedImage.rotation,\r\n        compressionOptions,\r\n      )\r\n\r\n      const storageId = await uploadFile(processedFile)\r\n      setFile(storageId)\r\n    } catch (error) {\r\n      console.error('Error processing image:', error)\r\n      toast.error(\r\n        error instanceof Error ? error.message : 'Failed to process image',\r\n      )\r\n    } finally {\r\n      setIsUploading(false)\r\n    }\r\n  }\r\n\r\n  const handleFileDelete = async () => {\r\n    try {\r\n      if (file && !file.startsWith('data:')) {\r\n        await deleteFile({ storageId: file })\r\n      }\r\n      removeFile()\r\n    } catch (error) {\r\n      console.error('Error deleting file:', error)\r\n      removeFile()\r\n    }\r\n  }\r\n\r\n  const triggerFileSelect = () => {\r\n    fileInputRef.current?.click()\r\n  }\r\n\r\n  const hasFile = !!file\r\n\r\n  return (\r\n    <>\r\n      <div className={cn('relative', className)}>\r\n        <input\r\n          ref={fileInputRef}\r\n          type=\"file\"\r\n          onChange={handleFileSelect}\r\n          className=\"hidden\"\r\n          accept={allowedTypes.join(',')}\r\n        />\r\n\r\n        {!hasFile && (\r\n          <Button\r\n            disabled={isUploading}\r\n            variant=\"default\"\r\n            size=\"default\"\r\n            className=\"w-fit\"\r\n            onClick={triggerFileSelect}\r\n          >\r\n            {isUploading ? (\r\n              <LoaderCircle className=\"h-4 w-4 animate-spin\" />\r\n            ) : (\r\n              <ImagePlus className=\"h-4 w-4\" />\r\n            )}\r\n            {isUploading ? 'Uploading...' : 'Add image'}\r\n          </Button>\r\n        )}\r\n\r\n        {file && (\r\n          <div className=\"relative p-4 w-fit\">\r\n            <ImageView\r\n              src={file}\r\n              alt=\"Uploaded image\"\r\n              className={cn('rounded-lg overflow-hidden', imageClassName)}\r\n            />\r\n            <div className=\"absolute top-0 right-0\">\r\n              <ConfirmAlertDialog\r\n                trigger={(props) => (\r\n                  <Button\r\n                    {...props}\r\n                    type=\"button\"\r\n                    variant=\"secondary\"\r\n                    size=\"icon\"\r\n                    className=\"cursor-pointer hover:bg-destructive hover:text-destructive-foreground\"\r\n                  >\r\n                    <Trash className=\"h-4 w-4\" />\r\n                  </Button>\r\n                )}\r\n                title=\"Delete image\"\r\n                description=\"Are you sure you want to delete this image? This action cannot be undone.\"\r\n                confirmLabel=\"Delete\"\r\n                cancelLabel=\"Cancel\"\r\n                onConfirm={handleFileDelete}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {pendingFile && (\r\n        <SingleImageCropDialog\r\n          open={cropDialogOpen}\r\n          onOpenChange={setCropDialogOpen}\r\n          file={pendingFile}\r\n          onUpload={handleCropDialogUpload}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SingleImageCropUploader\r\n","import { Button } from '@/components/ui/button'\nimport {\n  Dialog,\n  DialogContent,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog'\nimport { RotateCw, Upload } from 'lucide-react'\nimport React, { useCallback, useRef, useState } from 'react'\nimport ReactCrop, { type Crop, type PercentCrop } from 'react-image-crop'\nimport 'react-image-crop/dist/ReactCrop.css'\n\ninterface SingleImageCropDialogProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  file: File\n  onUpload: (processedImage: {\n    id: string\n    file: File\n    crop?: Crop\n    rotation: number\n  }) => void\n}\n\nexport function SingleImageCropDialog({\n  open,\n  onOpenChange,\n  file,\n  onUpload,\n}: SingleImageCropDialogProps) {\n  const [imageUrl, setImageUrl] = useState<string>('')\n  const [rotatedImageUrl, setRotatedImageUrl] = useState<string>('')\n  const [crop, setCrop] = useState<Crop>()\n  const [rotation, setRotation] = useState<number>(0)\n  const imgRef = useRef<HTMLImageElement | null>(null)\n\n  React.useEffect(() => {\n    if (file) {\n      const url = URL.createObjectURL(file)\n      setImageUrl(url)\n      return () => {\n        URL.revokeObjectURL(url)\n      }\n    }\n  }, [file])\n\n  const createRotatedImage = useCallback((imageUrl: string, rotation: number): Promise<string> => {\n    return new Promise((resolve) => {\n      const img = new Image()\n      img.onload = () => {\n        const canvas = document.createElement('canvas')\n        const ctx = canvas.getContext('2d')!\n\n        const isVertical = rotation % 180 === 90\n        const width = isVertical ? img.height : img.width\n        const height = isVertical ? img.width : img.height\n\n        canvas.width = width\n        canvas.height = height\n\n        ctx.translate(width / 2, height / 2)\n        ctx.rotate((rotation * Math.PI) / 180)\n        ctx.drawImage(img, -img.width / 2, -img.height / 2)\n\n        const rotatedUrl = canvas.toDataURL('image/jpeg', 0.9)\n        resolve(rotatedUrl)\n      }\n      img.src = imageUrl\n    })\n  }, [])\n\n  React.useEffect(() => {\n    if (imageUrl) {\n      createRotatedImage(imageUrl, rotation).then(setRotatedImageUrl)\n    }\n  }, [imageUrl, rotation, createRotatedImage])\n\n  const handleCropChange = useCallback(\n    (newCrop: Crop, percentCrop: PercentCrop) => {\n      setCrop(percentCrop)\n    },\n    [],\n  )\n\n  const handleRotate = useCallback(() => {\n    setRotation((prev) => (prev + 90) % 360)\n  }, [])\n\n  const handleUnselectCrop = useCallback(() => {\n    setCrop(undefined)\n  }, [])\n\n  const handleUpload = useCallback(() => {\n    const processedImage = {\n      id: `img-0`,\n      file: file,\n      crop: crop,\n      rotation: rotation,\n    }\n    onUpload(processedImage)\n    onOpenChange(false)\n  }, [file, crop, rotation, onUpload, onOpenChange])\n\n  if (!file) return null\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-hidden flex flex-col\">\n        <DialogHeader>\n          <DialogTitle>Edit Image</DialogTitle>\n        </DialogHeader>\n\n        <div className=\"flex-1 flex flex-col gap-4 overflow-hidden select-none\">\n          <div className=\"flex items-center justify-start\">\n            <div className=\"flex gap-2\">\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={handleUnselectCrop}\n                disabled={!crop}\n              >\n                Unselect\n              </Button>\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={handleRotate}\n              >\n                <RotateCw className=\"h-4 w-4\" />\n                Rotate\n              </Button>\n            </div>\n          </div>\n\n          <div\n            style={{\n              height: '100%',\n              overflow: 'scroll',\n            }}\n          >\n            {rotatedImageUrl && (\n              <ReactCrop\n                crop={crop}\n                onChange={handleCropChange}\n                aspect={undefined}\n                minWidth={5}\n                minHeight={5}\n                keepSelection\n              >\n                <img\n                  ref={imgRef}\n                  src={rotatedImageUrl}\n                  alt=\"Image to crop\"\n                  className=\"h-full w-auto object-contain\"\n                />\n              </ReactCrop>\n            )}\n          </div>\n        </div>\n\n        <DialogFooter>\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={() => onOpenChange(false)}\n          >\n            Cancel\n          </Button>\n          <Button type=\"button\" onClick={handleUpload}>\n            <Upload className=\"h-4 w-4\" />\n            Upload\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import { Button } from '@/components/ui/button'\r\nimport { ImageView } from '@/image/view/ImageView'\r\nimport { cn } from '@/lib/utils'\r\nimport { SingleFileUploaderHeadless } from '@battlemagedotapp/convex-upload-helpers'\r\nimport { ImagePlus, LoaderCircle, Trash } from 'lucide-react'\r\nimport ConfirmAlertDialog from '../ConfirmAlertDialog'\r\n\r\ntype SingleImageUploaderProps = {\r\n  file?: string | null\r\n  setFile: (f: string) => void\r\n  removeFile: () => void\r\n  maxSizeInMB?: number\r\n  allowedTypes?: string[]\r\n  successMessage?: string\r\n  errorMessage?: string\r\n  className?: string\r\n  imageClassName?: string\r\n}\r\n\r\nexport function SingleImageUploader({\r\n  file,\r\n  setFile,\r\n  removeFile,\r\n  maxSizeInMB,\r\n  allowedTypes = [],\r\n  successMessage = 'File uploaded successfully!',\r\n  errorMessage = 'Failed to upload file',\r\n  className,\r\n  imageClassName,\r\n}: SingleImageUploaderProps) {\r\n  return (\r\n    <SingleFileUploaderHeadless\r\n      file={file}\r\n      setFile={setFile}\r\n      removeFile={removeFile}\r\n      maxSizeInMB={maxSizeInMB}\r\n      allowedTypes={allowedTypes}\r\n      successMessage={successMessage}\r\n      errorMessage={errorMessage}\r\n    >\r\n      {({ isUploading, triggerFileSelect, handleFileDelete, hasFile }) => (\r\n        <div className={cn('relative', className)}>\r\n          {!hasFile && (\r\n            <Button\r\n              disabled={isUploading}\r\n              variant=\"default\"\r\n              size=\"default\"\r\n              className=\"w-fit\"\r\n              onClick={triggerFileSelect}\r\n            >\r\n              {isUploading ? (\r\n                <LoaderCircle className=\"h-4 w-4 animate-spin\" />\r\n              ) : (\r\n                <ImagePlus className=\"h-4 w-4\" />\r\n              )}\r\n              {isUploading ? 'Uploading...' : 'Add image'}\r\n            </Button>\r\n          )}\r\n\r\n          {file && (\r\n            <div className=\"relative p-4 w-fit\">\r\n              <ImageView\r\n                src={file}\r\n                alt=\"Uploaded image\"\r\n                className={cn('rounded-lg overflow-hidden', imageClassName)}\r\n              />\r\n              <div className=\"absolute top-0 right-0\">\r\n                <ConfirmAlertDialog\r\n                  trigger={(props) => (\r\n                    <Button\r\n                      {...props}\r\n                      type=\"button\"\r\n                      variant=\"secondary\"\r\n                      size=\"icon\"\r\n                      className=\"cursor-pointer hover:bg-destructive hover:text-destructive-foreground\"\r\n                    >\r\n                      <Trash className=\"h-4 w-4\" />\r\n                    </Button>\r\n                  )}\r\n                  title=\"Delete image\"\r\n                  description=\"Are you sure you want to delete this image? This action cannot be undone.\"\r\n                  confirmLabel=\"Delete\"\r\n                  cancelLabel=\"Cancel\"\r\n                  onConfirm={handleFileDelete}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </SingleFileUploaderHeadless>\r\n  )\r\n}\r\n\r\nexport default SingleImageUploader\r\n","import ImageViewContext, {\r\n  type TransformImageUrlFn,\r\n} from '@/image/view/ImageViewProviderContext'\r\nimport React from 'react'\r\n\r\ntype ImageViewProviderProps = {\r\n  transformImageUrlFn?: TransformImageUrlFn\r\n  children: React.ReactNode\r\n}\r\n\r\nexport function ImageViewProvider({\r\n  transformImageUrlFn,\r\n  children,\r\n}: ImageViewProviderProps) {\r\n  const fn = transformImageUrlFn ?? ((id: string) => id)\r\n  return (\r\n    <ImageViewContext.Provider value={{ transformImageUrlFn: fn }}>\r\n      {children}\r\n    </ImageViewContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ImageViewProvider\r\n"],"mappings":"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","names":["jsx","useRef","useState","jsx","jsxs","jsx","jsxs","jsx","jsxs","jsx","jsx","jsxs","X","React","useState","jsx","jsxs","jsx","jsxs","useState","useRef","ImagePlus","LoaderCircle","Trash","jsx","jsxs","LoaderCircle","ImagePlus","Trash","useFileUpload","ImagePlus","LoaderCircle","Trash","useRef","useState","toast","RotateCw","Upload","React","useCallback","useRef","useState","ReactCrop","jsx","jsxs","imageUrl","rotation","Fragment","jsx","jsxs","useState","useRef","useFileUpload","toast","LoaderCircle","ImagePlus","Trash","ImagePlus","LoaderCircle","Trash","jsx","jsxs","LoaderCircle","ImagePlus","Trash","jsx"]}