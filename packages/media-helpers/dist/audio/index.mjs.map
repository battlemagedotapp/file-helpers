{"version":3,"sources":["../../src/components/ui/popover.tsx","../../src/components/ui/slider.tsx","../../src/audio/playback/AudioPlayback.tsx","../../src/audio/playback/AudioPlaybackWithBlob.tsx","../../src/audio/playback/GlobalPlayer.tsx","../../src/audio/playback/GlobalPlayerProvider.tsx","../../src/audio/playback/GlobalPlayerContext.tsx","../../src/audio/playback/useGlobalPlayer.ts","../../src/audio/uploader/single-audio/CropTestComponent.tsx","../../src/audio/uploader/single-audio/CropTestComponentWithBlob.tsx","../../src/audio/uploader/single-audio/SingleAudioUploader.tsx","../../src/audio/uploader/ConfirmAlertDialog.tsx"],"sourcesContent":["import * as React from 'react'\r\nimport * as PopoverPrimitive from '@radix-ui/react-popover'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction Popover({\r\n  ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\r\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />\r\n}\r\n\r\nfunction PopoverTrigger({\r\n  ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\r\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />\r\n}\r\n\r\nfunction PopoverContent({\r\n  className,\r\n  align = 'center',\r\n  sideOffset = 4,\r\n  ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\r\n  return (\r\n    <PopoverPrimitive.Portal>\r\n      <PopoverPrimitive.Content\r\n        data-slot=\"popover-content\"\r\n        align={align}\r\n        sideOffset={sideOffset}\r\n        className={cn(\r\n          'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 origin-(--radix-popover-content-transform-origin) rounded-md border p-4 shadow-md outline-hidden',\r\n          className,\r\n        )}\r\n        {...props}\r\n      />\r\n    </PopoverPrimitive.Portal>\r\n  )\r\n}\r\n\r\nfunction PopoverAnchor({\r\n  ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\r\n  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />\r\n}\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\r\n","import * as React from 'react'\r\nimport * as SliderPrimitive from '@radix-ui/react-slider'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction Slider({\r\n  className,\r\n  defaultValue,\r\n  value,\r\n  min = 0,\r\n  max = 100,\r\n  ...props\r\n}: React.ComponentProps<typeof SliderPrimitive.Root>) {\r\n  const _values = React.useMemo(\r\n    () =>\r\n      Array.isArray(value)\r\n        ? value\r\n        : Array.isArray(defaultValue)\r\n          ? defaultValue\r\n          : [min, max],\r\n    [value, defaultValue, min, max],\r\n  )\r\n\r\n  return (\r\n    <SliderPrimitive.Root\r\n      data-slot=\"slider\"\r\n      defaultValue={defaultValue}\r\n      value={value}\r\n      min={min}\r\n      max={max}\r\n      className={cn(\r\n        'relative flex w-full touch-none items-center select-none data-[disabled]:opacity-50 data-[orientation=vertical]:h-full data-[orientation=vertical]:min-h-44 data-[orientation=vertical]:w-auto data-[orientation=vertical]:flex-col',\r\n        className,\r\n      )}\r\n      {...props}\r\n    >\r\n      <SliderPrimitive.Track\r\n        data-slot=\"slider-track\"\r\n        className={cn(\r\n          'bg-muted relative grow overflow-hidden rounded-full data-[orientation=horizontal]:h-1.5 data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-1.5',\r\n        )}\r\n      >\r\n        <SliderPrimitive.Range\r\n          data-slot=\"slider-range\"\r\n          className={cn(\r\n            'bg-primary absolute data-[orientation=horizontal]:h-full data-[orientation=vertical]:w-full',\r\n          )}\r\n        />\r\n      </SliderPrimitive.Track>\r\n      {Array.from({ length: _values.length }, (_, index) => (\r\n        <SliderPrimitive.Thumb\r\n          data-slot=\"slider-thumb\"\r\n          key={index}\r\n          className=\"border-primary bg-background ring-ring/50 block size-4 shrink-0 rounded-full border shadow-sm transition-[color,box-shadow] hover:ring-4 focus-visible:ring-4 focus-visible:outline-hidden disabled:pointer-events-none disabled:opacity-50\"\r\n        />\r\n      ))}\r\n    </SliderPrimitive.Root>\r\n  )\r\n}\r\n\r\nexport { Slider }\r\n","import { Button } from '@/components/ui/button'\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from '@/components/ui/popover'\r\nimport { Slider } from '@/components/ui/slider'\r\nimport { cn } from '@/lib/utils'\r\nimport {\r\n  CircleX,\r\n  Pause,\r\n  Play,\r\n  Redo,\r\n  Undo,\r\n  Volume2,\r\n  VolumeX,\r\n} from 'lucide-react'\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport WaveSurfer from 'wavesurfer.js'\r\n\r\ntype AudioSource =\r\n  | {\r\n      mode: 'url'\r\n      url: string\r\n      externalAudioUrlFn?: (url: string) => string\r\n    }\r\n  | {\r\n      mode: 'blob'\r\n      blob: Blob\r\n    }\r\n\r\ntype AudioPlaybackProps = {\r\n  src: AudioSource\r\n  trackId?: string\r\n  trackName?: string\r\n  initialVolume?: number\r\n  initialPlaybackRate?: number\r\n  initialCurrentTime?: number\r\n  initialPlaying?: boolean\r\n  className?: string\r\n  closePlayer?: () => void\r\n  onWavesurferReady?: (wavesurfer: WaveSurfer) => void\r\n}\r\n\r\nconst speeds = [0.5, 0.75, 1, 1.25, 1.5, 2]\r\n\r\nexport function AudioPlayback({\r\n  src,\r\n  trackId,\r\n  trackName,\r\n  initialVolume = 1,\r\n  initialPlaybackRate = 1,\r\n  initialCurrentTime = 0,\r\n  initialPlaying = false,\r\n  className,\r\n  closePlayer,\r\n  onWavesurferReady,\r\n}: AudioPlaybackProps) {\r\n  const timelineRef = useRef<HTMLDivElement | null>(null)\r\n  const [currentTime, setCurrentTime] = useState<number>(initialCurrentTime)\r\n  const [wavesurferObj, setWavesurferObj] = useState<WaveSurfer>()\r\n  const [volume, setVolume] = useState<number>(initialVolume)\r\n  const [playing, setPlaying] = useState(initialPlaying)\r\n  const [duration, setDuration] = useState<number>(0)\r\n  const [playbackRate, setPlaybackRate] = useState<number>(initialPlaybackRate)\r\n\r\n  useEffect(() => {\r\n    if (timelineRef.current && !wavesurferObj) {\r\n      if (timelineRef.current) {\r\n        timelineRef.current.innerHTML = ''\r\n      }\r\n\r\n      const ws = WaveSurfer.create({\r\n        container: timelineRef.current,\r\n        cursorColor: 'oklch(0.769 0.188 70.08)',\r\n        waveColor: 'oklch(0.708 0 0)',\r\n        progressColor: 'oklch(0.769 0.188 70.08)',\r\n        height: 32,\r\n        normalize: true,\r\n        fillParent: true,\r\n      })\r\n\r\n      setWavesurferObj(ws)\r\n    }\r\n  }, [wavesurferObj])\r\n\r\n  useEffect(() => {\r\n    if (src && wavesurferObj) {\r\n      if (src.mode === 'url') {\r\n        if (src.externalAudioUrlFn) {\r\n          wavesurferObj.load(src.externalAudioUrlFn(src.url))\r\n        } else {\r\n          wavesurferObj.load(src.url)\r\n        }\r\n      } else if (src.mode === 'blob') {\r\n        wavesurferObj.loadBlob(src.blob)\r\n      }\r\n    }\r\n  }, [src, wavesurferObj])\r\n\r\n  useEffect(() => {\r\n    if (wavesurferObj) {\r\n      const handleReady = () => {\r\n        setDuration(wavesurferObj.getDuration())\r\n\r\n        // Restore playback state when wavesurfer is ready\r\n        updatePlaybackState({\r\n          wavesurferObj,\r\n          initialVolume,\r\n          initialPlaybackRate,\r\n          initialCurrentTime,\r\n          initialPlaying,\r\n        })\r\n      }\r\n\r\n      const handlePlay = () => {\r\n        setPlaying(true)\r\n      }\r\n\r\n      const handleFinish = () => {\r\n        setPlaying(false)\r\n      }\r\n\r\n      const handleTimeUpdate = (currentTime: number) => {\r\n        setCurrentTime(currentTime)\r\n      }\r\n\r\n      wavesurferObj.on('ready', handleReady)\r\n      wavesurferObj.on('play', handlePlay)\r\n      wavesurferObj.on('finish', handleFinish)\r\n      wavesurferObj.on('timeupdate', handleTimeUpdate)\r\n\r\n      // Notify parent when wavesurfer is ready\r\n      if (onWavesurferReady) {\r\n        onWavesurferReady(wavesurferObj)\r\n      }\r\n\r\n      return () => {\r\n        wavesurferObj.destroy()\r\n        setWavesurferObj(undefined)\r\n      }\r\n    }\r\n  }, [\r\n    wavesurferObj,\r\n    onWavesurferReady,\r\n    initialVolume,\r\n    initialPlaybackRate,\r\n    initialCurrentTime,\r\n    initialPlaying,\r\n  ])\r\n\r\n  function updatePlaybackState({\r\n    wavesurferObj,\r\n    initialVolume,\r\n    initialPlaybackRate,\r\n    initialCurrentTime,\r\n    initialPlaying,\r\n  }: {\r\n    wavesurferObj: WaveSurfer\r\n    initialVolume: number\r\n    initialPlaybackRate: number\r\n    initialCurrentTime: number\r\n    initialPlaying: boolean\r\n  }) {\r\n    wavesurferObj.setVolume(initialVolume)\r\n    wavesurferObj.setPlaybackRate(initialPlaybackRate)\r\n    wavesurferObj.setTime(initialCurrentTime)\r\n    if (initialPlaying) {\r\n      wavesurferObj.play()\r\n      setPlaying(true)\r\n    } else {\r\n      wavesurferObj.pause()\r\n      setPlaying(false)\r\n    }\r\n  }\r\n\r\n  function handlePlayPause() {\r\n    if (!wavesurferObj) return\r\n    wavesurferObj.playPause()\r\n    setPlaying(!playing)\r\n  }\r\n\r\n  function handleVolumeSlider(value: number[]) {\r\n    if (!wavesurferObj) return\r\n    wavesurferObj.setVolume(value[0] / 100)\r\n    setVolume(value[0] / 100)\r\n  }\r\n\r\n  function handleSpeedChange(newSpeed: number) {\r\n    if (!wavesurferObj) return\r\n    wavesurferObj.setPlaybackRate(newSpeed)\r\n    setPlaybackRate(newSpeed)\r\n  }\r\n\r\n  function handleSkip(direction: 'forward' | 'backward') {\r\n    if (!wavesurferObj || duration <= 0) return\r\n    const skipTime = direction === 'forward' ? 10 : -10\r\n    const newTime = Math.max(0, Math.min(duration, currentTime + skipTime))\r\n    wavesurferObj.setTime(newTime)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      key={trackId}\r\n      className={cn(\r\n        'p-4 pt-2 sm:pt-4 w-full select-none flex gap-2 sm:flex-row flex-col min-w-[250px]',\r\n        className,\r\n      )}\r\n    >\r\n      {!!trackName && (\r\n        <div className=\"flex flex-row items-center justify-center gap-2\">\r\n          <p className=\"text-sm text-center sm:text-left font-semibold text-ellipsis line-clamp-1 sm:line-clamp-2 min-w-[200px] sm:max-w-[150px] sm:min-w-[100px]\">\r\n            {trackName}\r\n          </p>\r\n          {!!closePlayer && (\r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"icon\"\r\n              onClick={() => closePlayer()}\r\n              className=\"cursor-pointer sm:hidden\"\r\n            >\r\n              <CircleX className=\"h-4 w-4 text-destructive\" />\r\n            </Button>\r\n          )}\r\n        </div>\r\n      )}\r\n      <div className=\"flex items-center justify-center space-x-2\">\r\n        <VolumeControl\r\n          volume={volume}\r\n          handleVolumeSlider={handleVolumeSlider}\r\n        />\r\n\r\n        <Button\r\n          variant=\"outline\"\r\n          size=\"icon\"\r\n          onClick={() => handleSkip('backward')}\r\n        >\r\n          <Undo className=\"h-4 w-4\" />\r\n        </Button>\r\n\r\n        <Button variant=\"default\" size=\"icon\" onClick={handlePlayPause}>\r\n          {playing ? (\r\n            <Pause className=\"h-6 w-6\" />\r\n          ) : (\r\n            <Play className=\"h-6 w-6\" />\r\n          )}\r\n        </Button>\r\n\r\n        <Button\r\n          variant=\"outline\"\r\n          size=\"icon\"\r\n          onClick={() => handleSkip('forward')}\r\n        >\r\n          <Redo className=\"h-4 w-4\" />\r\n        </Button>\r\n\r\n        <SpeedControl\r\n          playbackRate={playbackRate}\r\n          handleSpeedChange={handleSpeedChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"gap-2 flex flex-row w-full justify-center items-center text-sm text-muted-foreground\">\r\n        <div>{formatTime(currentTime)}</div>\r\n        <div ref={timelineRef} className=\"w-full\" />\r\n        <div>{formatTime(duration)}</div>\r\n        {!!closePlayer && (\r\n          <Button\r\n            variant=\"ghost\"\r\n            onClick={() => closePlayer()}\r\n            className=\"cursor-pointer hidden sm:block\"\r\n          >\r\n            <CircleX className=\"h-4 w-4 text-destructive\" />\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction formatTime(time: number) {\r\n  const minutes = Math.floor(time / 60)\r\n  const seconds = Math.floor(time % 60)\r\n  return `${minutes}:${seconds.toString().padStart(2, '0')}`\r\n}\r\n\r\nfunction VolumeControl({\r\n  volume,\r\n  handleVolumeSlider,\r\n}: {\r\n  volume: number\r\n  handleVolumeSlider: (value: number[]) => void\r\n}) {\r\n  return (\r\n    <Popover>\r\n      <PopoverTrigger asChild>\r\n        <Button variant=\"outline\" size=\"icon\">\r\n          {volume === 0 ? (\r\n            <VolumeX className=\"h-4 w-4\" />\r\n          ) : (\r\n            <Volume2 className=\"h-4 w-4\" />\r\n          )}\r\n        </Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent className=\"w-fit p-4\" align=\"end\">\r\n        <div className=\"space-y-4\">\r\n          <span className=\"text-sm font-medium\">Volume</span>\r\n          <Slider\r\n            value={[volume * 100]}\r\n            onValueChange={handleVolumeSlider}\r\n            max={100}\r\n            step={1}\r\n            className=\"w-full\"\r\n            orientation=\"vertical\"\r\n          />\r\n        </div>\r\n      </PopoverContent>\r\n    </Popover>\r\n  )\r\n}\r\n\r\nfunction SpeedControl({\r\n  playbackRate,\r\n  handleSpeedChange,\r\n}: {\r\n  playbackRate: number\r\n  handleSpeedChange: (newSpeed: number) => void\r\n}) {\r\n  return (\r\n    <Popover>\r\n      <PopoverTrigger asChild>\r\n        <Button variant=\"outline\" size=\"icon\">\r\n          {playbackRate}x\r\n        </Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent className=\"w-fit p-4\" align=\"end\">\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-sm font-medium\">Speed</span>\r\n          </div>\r\n          <div className=\"flex flex-col gap-2\">\r\n            {speeds.map((speed) => (\r\n              <Button\r\n                key={speed}\r\n                variant={playbackRate === speed ? 'default' : 'ghost'}\r\n                size=\"sm\"\r\n                onClick={() => handleSpeedChange(speed)}\r\n                className=\"text-xs\"\r\n              >\r\n                {speed}x\r\n              </Button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </PopoverContent>\r\n    </Popover>\r\n  )\r\n}\r\n","import { Ellipsis } from 'lucide-react'\r\nimport { useEffect, useMemo, useState } from 'react'\r\nimport WaveSurfer from 'wavesurfer.js'\r\nimport { AudioPlayback } from './AudioPlayback'\r\n\r\ntype AudioPlaybackWithBlobProps = {\r\n  src: string\r\n  externalAudioUrlFn?: (url: string) => string\r\n  trackId?: string\r\n  trackName?: string\r\n  initialVolume?: number\r\n  initialPlaybackRate?: number\r\n  initialCurrentTime?: number\r\n  initialPlaying?: boolean\r\n  className?: string\r\n  closePlayer?: () => void\r\n  onWavesurferReady?: (wavesurfer: WaveSurfer) => void\r\n}\r\n\r\nasync function loadAudio(srcUrl: string) {\r\n  const response = await fetch(srcUrl)\r\n  const blob = await response.blob()\r\n  return [URL.createObjectURL(blob), blob] as const\r\n}\r\n\r\nexport function AudioPlaybackWithBlob({\r\n  src,\r\n  externalAudioUrlFn,\r\n  trackId,\r\n  trackName,\r\n  initialVolume,\r\n  initialPlaybackRate,\r\n  initialCurrentTime,\r\n  initialPlaying,\r\n  className,\r\n  closePlayer,\r\n  onWavesurferReady,\r\n}: AudioPlaybackWithBlobProps) {\r\n  const srcUrl = useMemo(\r\n    () => (externalAudioUrlFn ? externalAudioUrlFn(src) : src),\r\n    [externalAudioUrlFn, src],\r\n  )\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<Error | null>(null)\r\n  const [audioBlob, setAudioBlob] = useState<Blob | null>(null)\r\n  const [audioBlobUrl, setAudioBlobUrl] = useState<string | null>(null)\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    setError(null)\r\n    if (audioBlobUrl) {\r\n      URL.revokeObjectURL(audioBlobUrl)\r\n    }\r\n    loadAudio(srcUrl)\r\n      .then((res) => {\r\n        setAudioBlobUrl(res[0])\r\n        setAudioBlob(res[1])\r\n      })\r\n      .catch((err) => {\r\n        setError(err)\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false)\r\n      })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [srcUrl])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (audioBlobUrl) {\r\n        URL.revokeObjectURL(audioBlobUrl)\r\n      }\r\n    }\r\n  }, [audioBlobUrl])\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex flex-row justify-center\">\r\n        <Ellipsis className=\"h-4 w-4 animate-pulse\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>\r\n  }\r\n\r\n  if (audioBlob && audioBlobUrl) {\r\n    return (\r\n      <AudioPlayback\r\n        src={{ mode: 'blob', blob: audioBlob }}\r\n        trackId={trackId}\r\n        trackName={trackName}\r\n        initialVolume={initialVolume}\r\n        initialPlaybackRate={initialPlaybackRate}\r\n        initialCurrentTime={initialCurrentTime}\r\n        initialPlaying={initialPlaying}\r\n        className={className}\r\n        closePlayer={closePlayer}\r\n        onWavesurferReady={onWavesurferReady}\r\n      />\r\n    )\r\n  }\r\n  return <div>No audio source found</div>\r\n}\r\n","import { cn } from '@/lib/utils'\r\nimport WaveSurfer from 'wavesurfer.js'\r\nimport { AudioPlaybackWithBlob } from './AudioPlaybackWithBlob'\r\n\r\ntype GlobalPlayerState = {\r\n  src: string\r\n  trackName?: string\r\n  currentTime: number\r\n  volume: number\r\n  playbackRate: number\r\n  timestamp: number\r\n}\r\n\r\ntype GlobalPlayerProps = {\r\n  className?: string\r\n  externalAudioUrlFn?: (url: string) => string\r\n  playerState: GlobalPlayerState\r\n  onClose: () => void\r\n  onWavesurferReady?: (wavesurfer: WaveSurfer) => void\r\n}\r\n\r\nexport function GlobalPlayer({\r\n  className,\r\n  externalAudioUrlFn,\r\n  playerState,\r\n  onClose,\r\n  onWavesurferReady,\r\n}: GlobalPlayerProps) {\r\n  return (\r\n    <div\r\n      className={cn(\r\n        'fixed bottom-0 left-0 right-0 z-50 bg-background border-t border-border shadow-lg',\r\n        className,\r\n      )}\r\n    >\r\n      <div className=\"w-full\">\r\n        <AudioPlaybackWithBlob\r\n          src={playerState.src}\r\n          externalAudioUrlFn={externalAudioUrlFn}\r\n          trackName={playerState.trackName}\r\n          initialVolume={playerState.volume}\r\n          initialPlaybackRate={playerState.playbackRate}\r\n          initialCurrentTime={playerState.currentTime}\r\n          initialPlaying={false}\r\n          closePlayer={onClose}\r\n          onWavesurferReady={onWavesurferReady}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useCallback, useEffect, useRef, useState, type ReactNode } from 'react'\r\nimport { toast } from 'sonner'\r\nimport WaveSurfer from 'wavesurfer.js'\r\nimport { GlobalPlayer } from './GlobalPlayer'\r\nimport { GlobalPlayerContext } from './GlobalPlayerContext'\r\n\r\nconst GLOBAL_PLAYER_STORAGE_KEY = 'global-audio-player'\r\n\r\ntype GlobalPlayerState = {\r\n  src: string\r\n  trackName?: string\r\n  currentTime: number\r\n  volume: number\r\n  playbackRate: number\r\n  timestamp: number\r\n}\r\n\r\nexport function GlobalPlayerProvider({\r\n  children,\r\n  externalAudioUrlFn,\r\n}: {\r\n  children: ReactNode\r\n  externalAudioUrlFn?: (url: string) => string\r\n}) {\r\n  // Create internal wavesurfer ref for the global player\r\n  const wavesurferRef = useRef<WaveSurfer | null>(null)\r\n  // Load initial state synchronously so we don't call setState inside effects\r\n  const loadInitialState = (): GlobalPlayerState | null => {\r\n    try {\r\n      const stored = localStorage.getItem(GLOBAL_PLAYER_STORAGE_KEY)\r\n      if (stored) {\r\n        const state = JSON.parse(stored) as GlobalPlayerState\r\n        const isRecent = Date.now() - state.timestamp < 24 * 60 * 60 * 1000\r\n        if (isRecent) return state\r\n        localStorage.removeItem(GLOBAL_PLAYER_STORAGE_KEY)\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to load global player state:', err)\r\n      localStorage.removeItem(GLOBAL_PLAYER_STORAGE_KEY)\r\n      toast.error('Failed to load saved player state')\r\n    }\r\n    return null\r\n  }\r\n\r\n  const initialStored = loadInitialState()\r\n  const [storedPlayerState, setStoredPlayerState] =\r\n    useState<GlobalPlayerState | null>(initialStored)\r\n  const storedPlayerStateRef = useRef<GlobalPlayerState | null>(initialStored)\r\n  const [isVisible, setIsVisible] = useState<boolean>(\r\n    () => initialStored != null,\r\n  )\r\n\r\n  // Keep the ref in sync whenever we explicitly update the stored state\r\n  const updateStoredState = useCallback((next: GlobalPlayerState | null) => {\r\n    storedPlayerStateRef.current = next\r\n    setStoredPlayerState(next)\r\n  }, [])\r\n\r\n  // Persist a snapshot from wavesurferRef every 3 seconds when playing (read-only).\r\n  useEffect(() => {\r\n    const wsRef = wavesurferRef\r\n    if (!wsRef) return\r\n\r\n    const interval = setInterval(() => {\r\n      try {\r\n        const currentStored = storedPlayerStateRef.current\r\n        if (!currentStored) return\r\n        const ws = wsRef.current\r\n        if (!ws) return\r\n\r\n        // Only update if the player is currently playing\r\n        if (!ws.isPlaying()) return\r\n\r\n        // Read values from wavesurfer instance\r\n        const currentTime = ws.getCurrentTime()\r\n        const volume = ws.getVolume()\r\n        const playbackRate = ws.getPlaybackRate()\r\n\r\n        const updatedState: GlobalPlayerState = {\r\n          ...currentStored,\r\n          currentTime,\r\n          volume,\r\n          playbackRate,\r\n          timestamp: Date.now(),\r\n        }\r\n\r\n        localStorage.setItem(\r\n          GLOBAL_PLAYER_STORAGE_KEY,\r\n          JSON.stringify(updatedState),\r\n        )\r\n      } catch (err) {\r\n        console.error('Failed to save global player state:', err)\r\n        toast.error('Failed to save player state')\r\n      }\r\n    }, 3000)\r\n\r\n    return () => clearInterval(interval)\r\n    // Intentionally depend only on the ref object so interval isn't recreated frequently\r\n  }, [wavesurferRef])\r\n\r\n  const addToGlobalPlayer = useCallback(\r\n    (src: string, trackName?: string) => {\r\n      const newState: GlobalPlayerState = {\r\n        src,\r\n        trackName,\r\n        currentTime: 0,\r\n        volume: 1,\r\n        playbackRate: 1,\r\n        timestamp: Date.now(),\r\n      }\r\n\r\n      updateStoredState(newState)\r\n      setIsVisible(true)\r\n\r\n      try {\r\n        localStorage.setItem(\r\n          GLOBAL_PLAYER_STORAGE_KEY,\r\n          JSON.stringify(newState),\r\n        )\r\n        toast.success('Added. Press the play button to play.')\r\n      } catch (err) {\r\n        console.error('Failed to save global player state:', err)\r\n        toast.error('Failed to save player state')\r\n      }\r\n    },\r\n    [updateStoredState],\r\n  )\r\n\r\n  const handleWavesurferReady = useCallback((wavesurfer: WaveSurfer) => {\r\n    wavesurferRef.current = wavesurfer\r\n  }, [])\r\n\r\n  const handleClose = useCallback(() => {\r\n    setIsVisible(false)\r\n    updateStoredState(null)\r\n    wavesurferRef.current = null\r\n    localStorage.removeItem(GLOBAL_PLAYER_STORAGE_KEY)\r\n  }, [updateStoredState])\r\n\r\n  return (\r\n    <GlobalPlayerContext.Provider\r\n      value={{ addToGlobalPlayer, isGlobalPlayerVisible: isVisible }}\r\n    >\r\n      {children}\r\n      {isVisible && storedPlayerState && (\r\n        <GlobalPlayer\r\n          externalAudioUrlFn={externalAudioUrlFn}\r\n          playerState={storedPlayerState}\r\n          onClose={handleClose}\r\n          onWavesurferReady={handleWavesurferReady}\r\n        />\r\n      )}\r\n    </GlobalPlayerContext.Provider>\r\n  )\r\n}\r\n","import { createContext } from 'react'\r\n\r\nexport type GlobalPlayerContextType = {\r\n  addToGlobalPlayer: (src: string, trackName?: string) => void\r\n  isGlobalPlayerVisible: boolean\r\n}\r\n\r\nexport const GlobalPlayerContext =\r\n  createContext<GlobalPlayerContextType | null>(null)\r\n","import { useContext } from 'react'\r\nimport {\r\n  GlobalPlayerContext,\r\n  type GlobalPlayerContextType,\r\n} from './GlobalPlayerContext'\r\n\r\nexport function useGlobalPlayer(): GlobalPlayerContextType {\r\n  const context = useContext(GlobalPlayerContext)\r\n  if (!context) {\r\n    throw new Error(\r\n      'useGlobalPlayer must be used within a GlobalPlayerProvider',\r\n    )\r\n  }\r\n  return context\r\n}\r\n","import { Button } from '@/components/ui/button'\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/components/ui/popover'\nimport { Slider } from '@/components/ui/slider'\nimport { cn } from '@/lib/utils'\nimport {\n  Crop,\n  Pause,\n  Play,\n  RotateCcw,\n  Volume2,\n  VolumeX,\n  ZoomIn,\n  ZoomOut,\n} from 'lucide-react'\nimport { useEffect, useRef, useState } from 'react'\nimport WaveSurfer from 'wavesurfer.js'\nimport RegionsPlugin from 'wavesurfer.js/dist/plugins/regions.esm.js'\nimport TimelinePlugin from 'wavesurfer.js/dist/plugins/timeline.esm.js'\n\nconst regions = RegionsPlugin.create()\n\ntype AudioSource =\n  | {\n      mode: 'url'\n      url: string\n      externalAudioUrlFn?: (url: string) => string\n    }\n  | {\n      mode: 'blob'\n      blob: Blob\n    }\n\ntype AudioPlaybackProps = {\n  src: AudioSource\n  className?: string\n}\n\nexport function CropTestComponent({ src, className }: AudioPlaybackProps) {\n  const timelineRef = useRef<HTMLDivElement | null>(null)\n  const timestampsRef = useRef<HTMLDivElement | null>(null)\n  const [wavesurferObj, setWavesurferObj] = useState<WaveSurfer>()\n  const [volume, setVolume] = useState<number>(1)\n  const [playing, setPlaying] = useState(false)\n  const [zoom, setZoom] = useState(1)\n  const [duration, setDuration] = useState<number>(0)\n\n  useEffect(() => {\n    if (timelineRef.current && timestampsRef.current && !wavesurferObj) {\n      if (timelineRef.current) {\n        timelineRef.current.innerHTML = ''\n      }\n\n      const ws = WaveSurfer.create({\n        container: timelineRef.current,\n        cursorColor: 'oklch(0.769 0.188 70.08)',\n        waveColor: 'oklch(0.708 0 0)',\n        progressColor: 'oklch(0.769 0.188 70.08)',\n        height: 32,\n        normalize: true,\n        fillParent: true,\n        plugins: [\n          TimelinePlugin.create({\n            container: timestampsRef.current,\n          }),\n          regions,\n        ],\n      })\n\n      setWavesurferObj(ws)\n    }\n  }, [wavesurferObj])\n\n  useEffect(() => {\n    if (src && wavesurferObj) {\n      if (src.mode === 'url') {\n        if (src.externalAudioUrlFn) {\n          wavesurferObj.load(src.externalAudioUrlFn(src.url))\n        } else {\n          wavesurferObj.load(src.url)\n        }\n      } else if (src.mode === 'blob') {\n        wavesurferObj.loadBlob(src.blob)\n      }\n    }\n  }, [src, wavesurferObj])\n\n  useEffect(() => {\n    if (wavesurferObj) {\n      const handleReady = () => {\n        regions.enableDragSelection({})\n        setDuration(Math.floor(wavesurferObj.getDuration()))\n      }\n\n      const handlePlay = () => {\n        setPlaying(true)\n      }\n\n      const handleFinish = () => {\n        setPlaying(false)\n      }\n\n      regions.on('region-updated', () => {\n        const regionList = regions.getRegions()\n        const keys = Object.keys(regionList)\n        if (keys.length > 1) {\n          regionList[0].remove()\n        }\n      })\n\n      wavesurferObj.on('ready', handleReady)\n      wavesurferObj.on('play', handlePlay)\n      wavesurferObj.on('finish', handleFinish)\n\n      return () => {\n        wavesurferObj.destroy()\n        setWavesurferObj(undefined)\n      }\n    }\n  }, [wavesurferObj])\n\n  useEffect(() => {\n    if (duration && wavesurferObj) {\n      regions.addRegion({\n        start: Math.floor(duration / 2) - Math.floor(duration) / 5,\n        end: Math.floor(duration / 2),\n        color: 'hsla(265, 100%, 86%, 0.4)',\n      })\n    }\n  }, [duration, wavesurferObj])\n\n  function handlePlayPause() {\n    if (!wavesurferObj) return\n    wavesurferObj.playPause()\n    setPlaying(!playing)\n  }\n\n  function handleReload() {\n    if (!wavesurferObj) return\n    wavesurferObj.stop()\n    wavesurferObj.play()\n    setPlaying(true)\n  }\n\n  function handleVolumeSlider(value: number[]) {\n    if (!wavesurferObj) return\n    wavesurferObj.setVolume(value[0] / 100)\n    setVolume(value[0] / 100)\n  }\n\n  function handleZoomSlider(value: number[]) {\n    if (!wavesurferObj) return\n    wavesurferObj.zoom(value[0])\n    setZoom(value[0])\n  }\n\n  function handleTrim() {\n    if (!wavesurferObj) return\n    const region = regions.getRegions()[0]\n    if (!region) return\n\n    const original_buffer = wavesurferObj.getDecodedData()\n    if (!original_buffer) {\n      return\n    }\n\n    // Check if we have channels and handle both mono and stereo\n    const numberOfChannels = original_buffer.numberOfChannels\n    const channel1 = original_buffer.getChannelData(0)\n    const channel2 =\n      numberOfChannels > 1 ? original_buffer.getChannelData(1) : null\n\n    if (!channel1) {\n      return\n    }\n\n    const start = region.start\n    const end = region.end\n    const sampleRate = original_buffer.sampleRate\n\n    // Calculate indices for trimming and clamp them to valid ranges\n    const startIndex = Math.max(\n      0,\n      Math.min(original_buffer.length, Math.floor(start * sampleRate)),\n    )\n    const endIndex = Math.max(\n      0,\n      Math.min(original_buffer.length, Math.floor(end * sampleRate)),\n    )\n\n    if (endIndex <= startIndex) {\n      // nothing to trim\n      return\n    }\n\n    // Calculate new buffer length (removing the trimmed section)\n    const newLength = original_buffer.length - (endIndex - startIndex)\n    const newDuration = newLength / sampleRate\n\n    // Create arrays for the trimmed audio\n    const trimmedChannel1 = new Float32Array(newLength)\n    const trimmedChannel2 =\n      numberOfChannels > 1 ? new Float32Array(newLength) : null\n\n    // Copy data before the trim region (safe copy with known lengths)\n    const beforeLength = startIndex\n    if (beforeLength > 0) {\n      trimmedChannel1.set(channel1.subarray(0, startIndex), 0)\n      if (channel2 && trimmedChannel2) {\n        trimmedChannel2.set(channel2.subarray(0, startIndex), 0)\n      }\n    }\n\n    // Copy data after the trim region (copy into position `beforeLength`)\n    const afterLength = original_buffer.length - endIndex\n    if (afterLength > 0) {\n      // Ensure we don't write past the end of trimmed arrays\n      trimmedChannel1.set(\n        channel1.subarray(endIndex, endIndex + afterLength),\n        beforeLength,\n      )\n      if (channel2 && trimmedChannel2) {\n        trimmedChannel2.set(\n          channel2.subarray(endIndex, endIndex + afterLength),\n          beforeLength,\n        )\n      }\n    }\n\n    // Prepare channel data for createBuffer\n    const channelData = [trimmedChannel1]\n    if (trimmedChannel2) {\n      channelData.push(trimmedChannel2)\n    }\n\n    // Load the trimmed audio back into wavesurfer\n    wavesurferObj.load('', channelData, newDuration)\n  }\n\n  return (\n    <div\n      className={cn(\n        'p-4 pt-2 sm:pt-4 w-full select-none flex gap-2 sm:flex-row flex-col min-w-[250px]',\n        className,\n      )}\n    >\n      <div className=\"flex items-center justify-center space-x-2\">\n        <VolumeControl\n          volume={volume}\n          handleVolumeSlider={handleVolumeSlider}\n        />\n\n        <Button\n          variant=\"outline\"\n          size=\"icon\"\n          onClick={() => setZoom(zoom - 0.1)}\n        >\n          <ZoomOut className=\"h-4 w-4\" />\n        </Button>\n\n        <Button variant=\"default\" size=\"icon\" onClick={handlePlayPause}>\n          {playing ? (\n            <Pause className=\"h-6 w-6\" />\n          ) : (\n            <Play className=\"h-6 w-6\" />\n          )}\n        </Button>\n\n        <Button\n          variant=\"outline\"\n          size=\"icon\"\n          onClick={() => setZoom(zoom + 0.1)}\n        >\n          <ZoomIn className=\"h-4 w-4\" />\n        </Button>\n\n        <SetZoom zoom={zoom} handleZoomChange={handleZoomSlider} />\n        <Button variant=\"default\" size=\"icon\" onClick={handleReload}>\n          <RotateCcw className=\"h-4 w-4\" />\n        </Button>\n        <Button variant=\"default\" size=\"icon\" onClick={handleTrim}>\n          <Crop className=\"h-4 w-4\" />\n        </Button>\n      </div>\n\n      <div className=\"gap-2 flex flex-row w-full justify-center items-center text-sm text-muted-foreground\">\n        <div ref={timelineRef} className=\"w-full\" />\n        <div ref={timestampsRef} className=\"w-full\" />\n      </div>\n    </div>\n  )\n}\n\nfunction VolumeControl({\n  volume,\n  handleVolumeSlider,\n}: {\n  volume: number\n  handleVolumeSlider: (value: number[]) => void\n}) {\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button variant=\"outline\" size=\"icon\">\n          {volume === 0 ? (\n            <VolumeX className=\"h-4 w-4\" />\n          ) : (\n            <Volume2 className=\"h-4 w-4\" />\n          )}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-fit p-4\" align=\"end\">\n        <div className=\"space-y-4\">\n          <span className=\"text-sm font-medium\">Volume</span>\n          <Slider\n            value={[volume * 100]}\n            onValueChange={handleVolumeSlider}\n            max={100}\n            step={1}\n            className=\"w-full\"\n            orientation=\"vertical\"\n          />\n        </div>\n      </PopoverContent>\n    </Popover>\n  )\n}\n\nfunction SetZoom({\n  zoom,\n  handleZoomChange,\n}: {\n  zoom: number\n  handleZoomChange: (value: number[]) => void\n}) {\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button variant=\"outline\" size=\"icon\">\n          <ZoomOut className=\"h-4 w-4\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-fit p-4\" align=\"end\">\n        <div className=\"space-y-4\">\n          <span className=\"text-sm font-medium\">Zoom</span>\n          <Slider\n            value={[zoom]}\n            onValueChange={handleZoomChange}\n            max={1000}\n            min={1}\n            step={50}\n            className=\"w-full\"\n            orientation=\"vertical\"\n          />\n        </div>\n      </PopoverContent>\n    </Popover>\n  )\n}\n\n","import { Ellipsis } from 'lucide-react'\nimport { useEffect, useMemo, useState } from 'react'\nimport { CropTestComponent } from './CropTestComponent'\n\ntype AudioPlaybackWithBlobProps = {\n  src: string\n  externalAudioUrlFn?: (url: string) => string\n}\n\nasync function loadAudio(srcUrl: string) {\n  const response = await fetch(srcUrl)\n  const blob = await response.blob()\n  return [URL.createObjectURL(blob), blob] as const\n}\n\nexport function CropTestComponentWithBlob({\n  src,\n  externalAudioUrlFn,\n}: AudioPlaybackWithBlobProps) {\n  const srcUrl = useMemo(\n    () => (externalAudioUrlFn ? externalAudioUrlFn(src) : src),\n    [externalAudioUrlFn, src],\n  )\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<Error | null>(null)\n  const [audioBlob, setAudioBlob] = useState<Blob | null>(null)\n  const [audioBlobUrl, setAudioBlobUrl] = useState<string | null>(null)\n\n  useEffect(() => {\n    setIsLoading(true)\n    setError(null)\n    if (audioBlobUrl) {\n      URL.revokeObjectURL(audioBlobUrl)\n    }\n    loadAudio(srcUrl)\n      .then((res) => {\n        setAudioBlobUrl(res[0])\n        setAudioBlob(res[1])\n      })\n      .catch((err) => {\n        setError(err)\n      })\n      .finally(() => {\n        setIsLoading(false)\n      })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [srcUrl])\n\n  useEffect(() => {\n    return () => {\n      if (audioBlobUrl) {\n        URL.revokeObjectURL(audioBlobUrl)\n      }\n    }\n  }, [audioBlobUrl])\n\n  if (isLoading) {\n    return (\n      <div className=\"flex flex-row justify-center\">\n        <Ellipsis className=\"h-4 w-4 animate-pulse\" />\n      </div>\n    )\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>\n  }\n\n  if (audioBlob && audioBlobUrl) {\n    return <CropTestComponent src={{ mode: 'blob', blob: audioBlob }} />\n  }\n  return <div>No audio source found</div>\n}\n\n","import { AudioPlaybackWithBlob } from '@/audio/playback/AudioPlaybackWithBlob'\r\nimport { useGlobalPlayer } from '@/audio/playback/useGlobalPlayer'\r\nimport { Button } from '@/components/ui/button'\r\nimport { cn } from '@/lib/utils'\r\nimport { SingleFileUploaderHeadless } from '@battlemagedotapp/convex-upload-helpers'\r\nimport { ExternalLink, LoaderCircle, Music, Trash } from 'lucide-react'\r\nimport ConfirmAlertDialog from '../ConfirmAlertDialog'\r\n\r\ntype SingleAudioUploaderProps = {\r\n  file?: string | null\r\n  setFile: (f: string) => void\r\n  removeFile: () => void\r\n  maxSizeInMB?: number\r\n  allowedTypes?: string[]\r\n  successMessage?: string\r\n  errorMessage?: string\r\n  className?: string\r\n  externalAudioUrlFn?: (url: string) => string\r\n  closePlayer?: () => void\r\n}\r\n\r\nexport function SingleAudioUploader({\r\n  file,\r\n  setFile,\r\n  removeFile,\r\n  maxSizeInMB,\r\n  allowedTypes = [],\r\n  successMessage = 'Audio file uploaded successfully!',\r\n  errorMessage = 'Failed to upload audio file',\r\n  className,\r\n  externalAudioUrlFn,\r\n  closePlayer,\r\n}: SingleAudioUploaderProps) {\r\n  const { addToGlobalPlayer } = useGlobalPlayer()\r\n  return (\r\n    <SingleFileUploaderHeadless\r\n      file={file}\r\n      setFile={setFile}\r\n      removeFile={removeFile}\r\n      maxSizeInMB={maxSizeInMB}\r\n      allowedTypes={allowedTypes}\r\n      successMessage={successMessage}\r\n      errorMessage={errorMessage}\r\n    >\r\n      {({ isUploading, triggerFileSelect, handleFileDelete, hasFile }) => (\r\n        <div className={cn('relative', className)}>\r\n          {!hasFile && (\r\n            <Button\r\n              disabled={isUploading}\r\n              variant=\"default\"\r\n              size=\"default\"\r\n              className=\"w-fit\"\r\n              onClick={triggerFileSelect}\r\n            >\r\n              {isUploading ? (\r\n                <LoaderCircle className=\"h-4 w-4 animate-spin\" />\r\n              ) : (\r\n                <Music className=\"h-4 w-4\" />\r\n              )}\r\n              {isUploading ? 'Uploading...' : 'Add audio'}\r\n            </Button>\r\n          )}\r\n\r\n          {file && (\r\n            <div className=\"relative p-4 w-full min-w-[332px] flex flex-col items-center gap-2\">\r\n              <AudioPlaybackWithBlob\r\n                src={file}\r\n                externalAudioUrlFn={externalAudioUrlFn}\r\n                closePlayer={closePlayer}\r\n              />\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                className=\"cursor-pointer\"\r\n                onClick={() => addToGlobalPlayer(file, 'Uploaded Audio')}\r\n                title=\"Open in global player\"\r\n              >\r\n                <ExternalLink className=\"h-4 w-4\" />\r\n                Open in player\r\n              </Button>\r\n              <div className=\"absolute top-0 right-0 flex gap-1\">\r\n                <ConfirmAlertDialog\r\n                  trigger={(props) => (\r\n                    <Button\r\n                      {...props}\r\n                      type=\"button\"\r\n                      variant=\"secondary\"\r\n                      size=\"icon\"\r\n                      className=\"cursor-pointer hover:bg-destructive hover:text-destructive-foreground\"\r\n                    >\r\n                      <Trash className=\"h-4 w-4\" />\r\n                    </Button>\r\n                  )}\r\n                  title=\"Delete audio\"\r\n                  description=\"Are you sure you want to delete this audio file? This action cannot be undone.\"\r\n                  confirmLabel=\"Delete\"\r\n                  cancelLabel=\"Cancel\"\r\n                  onConfirm={handleFileDelete}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </SingleFileUploaderHeadless>\r\n  )\r\n}\r\n\r\nexport default SingleAudioUploader\r\n","import {\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n  AlertDialogTrigger,\r\n  AlertDialog as BaseAlertDialog,\r\n} from '@/components/ui/alert-dialog'\r\nimport * as React from 'react'\r\n\r\ntype ConfirmAlertDialogProps = {\r\n  title?: string\r\n  description?: string\r\n  trigger?:\r\n    | React.ReactNode\r\n    | ((\r\n        props: React.ComponentProps<typeof AlertDialogTrigger>,\r\n      ) => React.ReactNode)\r\n  onConfirm: () => void\r\n  confirmLabel?: string\r\n  cancelLabel?: string\r\n}\r\n\r\nexport function ConfirmAlertDialog({\r\n  title = 'Are you sure?',\r\n  description = 'This action cannot be undone.',\r\n  trigger,\r\n  onConfirm,\r\n  confirmLabel = 'Continue',\r\n  cancelLabel = 'Cancel',\r\n}: ConfirmAlertDialogProps) {\r\n  return (\r\n    <BaseAlertDialog>\r\n      {trigger ? (\r\n        typeof trigger === 'function' ? (\r\n          <AlertDialogTrigger asChild>\r\n            {trigger({} as React.ComponentProps<typeof AlertDialogTrigger>)}\r\n          </AlertDialogTrigger>\r\n        ) : (\r\n          <AlertDialogTrigger asChild>{trigger}</AlertDialogTrigger>\r\n        )\r\n      ) : null}\r\n      <AlertDialogContent>\r\n        <AlertDialogHeader>\r\n          <AlertDialogTitle>{title}</AlertDialogTitle>\r\n          <AlertDialogDescription>{description}</AlertDialogDescription>\r\n        </AlertDialogHeader>\r\n        <AlertDialogFooter>\r\n          <AlertDialogCancel>{cancelLabel}</AlertDialogCancel>\r\n          <AlertDialogAction onClick={onConfirm}>\r\n            {confirmLabel}\r\n          </AlertDialogAction>\r\n        </AlertDialogFooter>\r\n      </AlertDialogContent>\r\n    </BaseAlertDialog>\r\n  )\r\n}\r\n\r\nexport default ConfirmAlertDialog\r\n"],"mappings":"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","names":["React","jsx","jsx","jsxs","currentTime","wavesurferObj","initialVolume","initialPlaybackRate","initialCurrentTime","initialPlaying","useEffect","useMemo","useState","jsx","jsxs","useMemo","useState","useEffect","jsx","useEffect","useRef","useState","jsx","jsxs","useRef","useState","useEffect","Pause","Play","Volume2","VolumeX","useEffect","useRef","useState","WaveSurfer","jsx","jsxs","VolumeControl","Ellipsis","useEffect","useMemo","useState","jsx","jsxs","loadAudio","useMemo","useState","useEffect","Ellipsis","jsx","jsxs","jsx","jsxs"]}