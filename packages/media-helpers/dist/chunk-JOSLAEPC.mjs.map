{"version":3,"sources":["../src/components/ui/popover.tsx","../src/components/ui/slider.tsx","../src/audio/playback/AudioPlayback.tsx","../src/audio/playback/AudioPlaybackWithBlob.tsx","../src/audio/playback/GlobalPlayer.tsx","../src/audio/playback/GlobalPlayerContext.tsx","../src/audio/playback/useGlobalPlayer.ts","../src/audio/uploader/single-audio/SingleAudioUploader.tsx","../src/audio/uploader/ConfirmAlertDialog.tsx"],"sourcesContent":["import * as React from 'react'\r\nimport * as PopoverPrimitive from '@radix-ui/react-popover'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction Popover({\r\n  ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\r\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />\r\n}\r\n\r\nfunction PopoverTrigger({\r\n  ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\r\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />\r\n}\r\n\r\nfunction PopoverContent({\r\n  className,\r\n  align = 'center',\r\n  sideOffset = 4,\r\n  ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\r\n  return (\r\n    <PopoverPrimitive.Portal>\r\n      <PopoverPrimitive.Content\r\n        data-slot=\"popover-content\"\r\n        align={align}\r\n        sideOffset={sideOffset}\r\n        className={cn(\r\n          'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 origin-(--radix-popover-content-transform-origin) rounded-md border p-4 shadow-md outline-hidden',\r\n          className,\r\n        )}\r\n        {...props}\r\n      />\r\n    </PopoverPrimitive.Portal>\r\n  )\r\n}\r\n\r\nfunction PopoverAnchor({\r\n  ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\r\n  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />\r\n}\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\r\n","import * as React from 'react'\r\nimport * as SliderPrimitive from '@radix-ui/react-slider'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction Slider({\r\n  className,\r\n  defaultValue,\r\n  value,\r\n  min = 0,\r\n  max = 100,\r\n  ...props\r\n}: React.ComponentProps<typeof SliderPrimitive.Root>) {\r\n  const _values = React.useMemo(\r\n    () =>\r\n      Array.isArray(value)\r\n        ? value\r\n        : Array.isArray(defaultValue)\r\n          ? defaultValue\r\n          : [min, max],\r\n    [value, defaultValue, min, max],\r\n  )\r\n\r\n  return (\r\n    <SliderPrimitive.Root\r\n      data-slot=\"slider\"\r\n      defaultValue={defaultValue}\r\n      value={value}\r\n      min={min}\r\n      max={max}\r\n      className={cn(\r\n        'relative flex w-full touch-none items-center select-none data-[disabled]:opacity-50 data-[orientation=vertical]:h-full data-[orientation=vertical]:min-h-44 data-[orientation=vertical]:w-auto data-[orientation=vertical]:flex-col',\r\n        className,\r\n      )}\r\n      {...props}\r\n    >\r\n      <SliderPrimitive.Track\r\n        data-slot=\"slider-track\"\r\n        className={cn(\r\n          'bg-muted relative grow overflow-hidden rounded-full data-[orientation=horizontal]:h-1.5 data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-1.5',\r\n        )}\r\n      >\r\n        <SliderPrimitive.Range\r\n          data-slot=\"slider-range\"\r\n          className={cn(\r\n            'bg-primary absolute data-[orientation=horizontal]:h-full data-[orientation=vertical]:w-full',\r\n          )}\r\n        />\r\n      </SliderPrimitive.Track>\r\n      {Array.from({ length: _values.length }, (_, index) => (\r\n        <SliderPrimitive.Thumb\r\n          data-slot=\"slider-thumb\"\r\n          key={index}\r\n          className=\"border-primary bg-background ring-ring/50 block size-4 shrink-0 rounded-full border shadow-sm transition-[color,box-shadow] hover:ring-4 focus-visible:ring-4 focus-visible:outline-hidden disabled:pointer-events-none disabled:opacity-50\"\r\n        />\r\n      ))}\r\n    </SliderPrimitive.Root>\r\n  )\r\n}\r\n\r\nexport { Slider }\r\n","import { Button } from '@/components/ui/button'\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/components/ui/popover'\nimport { Slider } from '@/components/ui/slider'\nimport { cn } from '@/lib/utils'\nimport {\n  CircleX,\n  Pause,\n  Play,\n  Redo,\n  Undo,\n  Volume2,\n  VolumeX,\n} from 'lucide-react'\nimport { useEffect, useRef, useState } from 'react'\nimport WaveSurfer from 'wavesurfer.js'\n\ntype AudioSource =\n  | {\n      mode: 'url'\n      url: string\n      externalAudioUrlFn?: (url: string) => string\n    }\n  | {\n      mode: 'blob'\n      blob: Blob\n    }\n\ntype AudioPlaybackProps = {\n  src: AudioSource\n  externalAudioUrlFn?: (url: string) => string\n  trackId?: string\n  trackName?: string\n  initialVolume?: number\n  initialPlaybackRate?: number\n  initialCurrentTime?: number\n  initialPlaying?: boolean\n  className?: string\n  closePlayer?: () => void\n}\n\nconst speeds = [0.5, 0.75, 1, 1.25, 1.5, 2]\n\nexport function AudioPlayback({\n  src,\n  externalAudioUrlFn,\n  trackId,\n  trackName,\n  initialVolume = 1,\n  initialPlaybackRate = 1,\n  initialCurrentTime = 0,\n  initialPlaying = false,\n  className,\n  closePlayer,\n}: AudioPlaybackProps) {\n  const timelineRef = useRef<HTMLDivElement | null>(null)\n  const [currentTime, setCurrentTime] = useState<number>(initialCurrentTime)\n  const [wavesurferObj, setWavesurferObj] = useState<WaveSurfer>()\n  const [volume, setVolume] = useState<number>(initialVolume)\n  const [playing, setPlaying] = useState(initialPlaying)\n  const [duration, setDuration] = useState<number>(0)\n  const [playbackRate, setPlaybackRate] = useState<number>(initialPlaybackRate)\n\n  useEffect(() => {\n    if (timelineRef.current && !wavesurferObj) {\n      if (timelineRef.current) {\n        timelineRef.current.innerHTML = ''\n      }\n\n      const ws = WaveSurfer.create({\n        container: timelineRef.current,\n        cursorColor: 'oklch(0.769 0.188 70.08)',\n        waveColor: 'oklch(0.708 0 0)',\n        progressColor: 'oklch(0.769 0.188 70.08)',\n        height: 32,\n        normalize: true,\n        fillParent: true,\n      })\n\n      setWavesurferObj(ws)\n    }\n  }, [wavesurferObj])\n\n  useEffect(() => {\n    if (src && wavesurferObj) {\n      if (src.mode === 'url') {\n        if (externalAudioUrlFn) {\n          wavesurferObj.load(externalAudioUrlFn(src.url))\n        } else {\n          wavesurferObj.load(src.url)\n        }\n      } else if (src.mode === 'blob') {\n        wavesurferObj.loadBlob(src.blob)\n      }\n\n      updatePlaybackState({\n        wavesurferObj,\n        initialVolume,\n        initialPlaybackRate,\n        initialCurrentTime,\n        initialPlaying,\n      })\n    }\n  }, [\n    src,\n    wavesurferObj,\n    externalAudioUrlFn,\n    initialVolume,\n    initialPlaybackRate,\n    initialCurrentTime,\n    initialPlaying,\n  ])\n\n  useEffect(() => {\n    if (wavesurferObj) {\n      const handleReady = () => {\n        wavesurferObj.pause()\n        setDuration(wavesurferObj.getDuration())\n      }\n\n      const handlePlay = () => {\n        setPlaying(true)\n      }\n\n      const handleFinish = () => {\n        setPlaying(false)\n      }\n\n      const handleTimeUpdate = (currentTime: number) => {\n        setCurrentTime(currentTime)\n      }\n\n      wavesurferObj.on('ready', handleReady)\n      wavesurferObj.on('play', handlePlay)\n      wavesurferObj.on('finish', handleFinish)\n      wavesurferObj.on('timeupdate', handleTimeUpdate)\n\n      return () => {\n        wavesurferObj.destroy()\n        setWavesurferObj(undefined)\n      }\n    }\n  }, [wavesurferObj])\n\n  useEffect(() => {\n    if (wavesurferObj) wavesurferObj.setVolume(volume)\n  }, [volume, wavesurferObj])\n\n  function updatePlaybackState({\n    wavesurferObj,\n    initialVolume,\n    initialPlaybackRate,\n    initialCurrentTime,\n    initialPlaying,\n  }: {\n    wavesurferObj: WaveSurfer\n    initialVolume: number\n    initialPlaybackRate: number\n    initialCurrentTime: number\n    initialPlaying: boolean\n  }) {\n    wavesurferObj.setVolume(initialVolume)\n    wavesurferObj.setPlaybackRate(initialPlaybackRate)\n    wavesurferObj.setTime(initialCurrentTime)\n    if (initialPlaying) {\n      wavesurferObj.play()\n      setPlaying(true)\n    } else {\n      wavesurferObj.pause()\n      setPlaying(false)\n    }\n  }\n\n  function handlePlayPause() {\n    wavesurferObj?.playPause()\n    setPlaying(!playing)\n  }\n\n  function handleVolumeSlider(value: number[]) {\n    setVolume(value[0] / 100)\n  }\n\n  function handleSpeedChange(newSpeed: number) {\n    if (wavesurferObj) {\n      wavesurferObj.setPlaybackRate(newSpeed)\n      setPlaybackRate(newSpeed)\n    }\n  }\n\n  function handleSkip(direction: 'forward' | 'backward') {\n    if (wavesurferObj && duration > 0) {\n      const skipTime = direction === 'forward' ? 10 : -10\n      const newTime = Math.max(0, Math.min(duration, currentTime + skipTime))\n      wavesurferObj.setTime(newTime)\n    }\n  }\n\n  return (\n    <div\n      key={trackId}\n      className={cn(\n        'p-4 pt-2 sm:pt-4 select-none flex gap-2 sm:flex-row flex-col min-w-[250px]',\n        className,\n      )}\n    >\n      {!!trackName && (\n        <div className=\"flex flex-row items-center justify-center gap-2\">\n          <p className=\"text-sm text-center sm:text-left font-semibold text-ellipsis line-clamp-1 sm:line-clamp-2 min-w-[200px] sm:max-w-[150px] sm:min-w-[100px]\">\n            {trackName}\n          </p>\n          {!!closePlayer && (\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={() => closePlayer()}\n              className=\"cursor-pointer sm:hidden\"\n            >\n              <CircleX className=\"h-4 w-4 text-destructive\" />\n            </Button>\n          )}\n        </div>\n      )}\n      <div className=\"flex items-center justify-center space-x-2\">\n        <VolumeControl\n          volume={volume}\n          handleVolumeSlider={handleVolumeSlider}\n        />\n\n        <Button\n          variant=\"outline\"\n          size=\"icon\"\n          onClick={() => handleSkip('backward')}\n        >\n          <Undo className=\"h-4 w-4\" />\n        </Button>\n\n        <Button variant=\"default\" size=\"icon\" onClick={handlePlayPause}>\n          {playing ? (\n            <Pause className=\"h-6 w-6\" />\n          ) : (\n            <Play className=\"h-6 w-6\" />\n          )}\n        </Button>\n\n        <Button\n          variant=\"outline\"\n          size=\"icon\"\n          onClick={() => handleSkip('forward')}\n        >\n          <Redo className=\"h-4 w-4\" />\n        </Button>\n\n        <SpeedControl\n          playbackRate={playbackRate}\n          handleSpeedChange={handleSpeedChange}\n        />\n      </div>\n\n      <div className=\"gap-2 flex flex-row w-full justify-center items-center text-sm text-muted-foreground\">\n        <div>{formatTime(currentTime)}</div>\n        <div ref={timelineRef} className=\"w-full\" />\n        <div>{formatTime(duration)}</div>\n        {!!closePlayer && (\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            onClick={() => closePlayer()}\n            className=\"cursor-pointer hidden sm:block ml-2\"\n          >\n            <CircleX className=\"h-4 w-4 text-destructive\" />\n          </Button>\n        )}\n      </div>\n    </div>\n  )\n}\n\nfunction formatTime(time: number) {\n  const minutes = Math.floor(time / 60)\n  const seconds = Math.floor(time % 60)\n  return `${minutes}:${seconds.toString().padStart(2, '0')}`\n}\n\nfunction VolumeControl({\n  volume,\n  handleVolumeSlider,\n}: {\n  volume: number\n  handleVolumeSlider: (value: number[]) => void\n}) {\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button variant=\"outline\" size=\"icon\">\n          {volume === 0 ? (\n            <VolumeX className=\"h-4 w-4\" />\n          ) : (\n            <Volume2 className=\"h-4 w-4\" />\n          )}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-fit p-4\" align=\"end\">\n        <div className=\"space-y-4\">\n          <span className=\"text-sm font-medium\">Volume</span>\n          <Slider\n            value={[volume * 100]}\n            onValueChange={handleVolumeSlider}\n            max={100}\n            step={1}\n            className=\"w-full\"\n            orientation=\"vertical\"\n          />\n        </div>\n      </PopoverContent>\n    </Popover>\n  )\n}\n\nfunction SpeedControl({\n  playbackRate,\n  handleSpeedChange,\n}: {\n  playbackRate: number\n  handleSpeedChange: (newSpeed: number) => void\n}) {\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button variant=\"outline\" size=\"icon\">\n          {playbackRate}x\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-fit p-4\" align=\"end\">\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm font-medium\">Speed</span>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            {speeds.map((speed) => (\n              <Button\n                key={speed}\n                variant={playbackRate === speed ? 'default' : 'ghost'}\n                size=\"sm\"\n                onClick={() => handleSpeedChange(speed)}\n                className=\"text-xs\"\n              >\n                {speed}x\n              </Button>\n            ))}\n          </div>\n        </div>\n      </PopoverContent>\n    </Popover>\n  )\n}\n\n","import { useEffect, useMemo, useState } from 'react'\nimport { AudioPlayback } from './AudioPlayback'\n\ntype AudioPlaybackWithBlobProps = {\n  src: string\n  externalAudioUrlFn?: (url: string) => string\n  trackId?: string\n  trackName?: string\n  initialVolume?: number\n  initialPlaybackRate?: number\n  initialCurrentTime?: number\n  initialPlaying?: boolean\n  className?: string\n  closePlayer?: () => void\n}\n\nasync function loadAudio(srcUrl: string) {\n  const response = await fetch(srcUrl)\n  const blob = await response.blob()\n  return [URL.createObjectURL(blob), blob] as const\n}\n\nexport function AudioPlaybackWithBlob({\n  src,\n  externalAudioUrlFn,\n  trackId,\n  trackName,\n  initialVolume,\n  initialPlaybackRate,\n  initialCurrentTime,\n  initialPlaying,\n  className,\n  closePlayer,\n}: AudioPlaybackWithBlobProps) {\n  const srcUrl = useMemo(\n    () => (externalAudioUrlFn ? externalAudioUrlFn(src) : src),\n    [externalAudioUrlFn, src],\n  )\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<Error | null>(null)\n  const [audioBlob, setAudioBlob] = useState<Blob | null>(null)\n  const [audioBlobUrl, setAudioBlobUrl] = useState<string | null>(null)\n\n  useEffect(() => {\n    setIsLoading(true)\n    setError(null)\n    if (audioBlobUrl) {\n      URL.revokeObjectURL(audioBlobUrl)\n    }\n    loadAudio(srcUrl)\n      .then((res) => {\n        setAudioBlobUrl(res[0])\n        setAudioBlob(res[1])\n      })\n      .catch((err) => {\n        setError(err)\n      })\n      .finally(() => {\n        setIsLoading(false)\n      })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [srcUrl])\n\n  useEffect(() => {\n    return () => {\n      if (audioBlobUrl) {\n        URL.revokeObjectURL(audioBlobUrl)\n      }\n    }\n  }, [audioBlobUrl])\n\n  if (isLoading) {\n    return <div>Loading...</div>\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>\n  }\n\n  if (audioBlob && audioBlobUrl) {\n    return (\n      <AudioPlayback\n        src={{ mode: 'blob', blob: audioBlob }}\n        trackId={trackId}\n        trackName={trackName}\n        initialVolume={initialVolume}\n        initialPlaybackRate={initialPlaybackRate}\n        initialCurrentTime={initialCurrentTime}\n        initialPlaying={initialPlaying}\n        className={className}\n        closePlayer={closePlayer}\n      />\n    )\n  }\n  return <div>No audio source found</div>\n}\n\n","import { cn } from '@/lib/utils'\r\nimport { useEffect, useState, type ReactNode } from 'react'\r\nimport { toast } from 'sonner'\r\nimport { AudioPlaybackWithBlob } from './AudioPlaybackWithBlob'\r\nimport { GlobalPlayerContext } from './GlobalPlayerContext'\r\n\r\nconst GLOBAL_PLAYER_STORAGE_KEY = 'global-audio-player'\r\n\r\ntype GlobalPlayerState = {\r\n  src: string\r\n  trackName?: string\r\n  currentTime: number\r\n  volume: number\r\n  playbackRate: number\r\n  timestamp: number\r\n}\r\n\r\ntype GlobalPlayerProps = {\r\n  className?: string\r\n  externalAudioUrlFn?: (url: string) => string\r\n  playerState: GlobalPlayerState\r\n  onClose: () => void\r\n}\r\n\r\nfunction GlobalPlayerComponent({\r\n  className,\r\n  externalAudioUrlFn,\r\n  playerState,\r\n  onClose,\r\n}: GlobalPlayerProps) {\r\n  return (\r\n    <div\r\n      className={cn(\r\n        'fixed bottom-0 left-0 right-0 z-50 bg-background border-t border-border shadow-lg',\r\n        className,\r\n      )}\r\n    >\r\n      <div className=\"w-full\">\r\n        <AudioPlaybackWithBlob\r\n          src={playerState.src}\r\n          externalAudioUrlFn={externalAudioUrlFn}\r\n          trackName={playerState.trackName}\r\n          initialVolume={playerState.volume}\r\n          initialPlaybackRate={playerState.playbackRate}\r\n          initialCurrentTime={playerState.currentTime}\r\n          initialPlaying={false}\r\n          closePlayer={onClose}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function GlobalPlayerProvider({\r\n  children,\r\n  externalAudioUrlFn,\r\n}: {\r\n  children: ReactNode\r\n  externalAudioUrlFn?: (url: string) => string\r\n}) {\r\n  const [globalPlayerState, setGlobalPlayerState] =\r\n    useState<GlobalPlayerState | null>(null)\r\n  const [isVisible, setIsVisible] = useState(false)\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const stored = localStorage.getItem(GLOBAL_PLAYER_STORAGE_KEY)\r\n      if (stored) {\r\n        const state = JSON.parse(stored) as GlobalPlayerState\r\n        const isRecent = Date.now() - state.timestamp < 24 * 60 * 60 * 1000\r\n        if (isRecent) {\r\n          setGlobalPlayerState(state)\r\n          setIsVisible(true)\r\n        } else {\r\n          localStorage.removeItem(GLOBAL_PLAYER_STORAGE_KEY)\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to load global player state:', err)\r\n      localStorage.removeItem(GLOBAL_PLAYER_STORAGE_KEY)\r\n      toast.error('Failed to load saved player state')\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!globalPlayerState) return\r\n\r\n    const interval = setInterval(() => {\r\n      try {\r\n        const updatedState = {\r\n          ...globalPlayerState,\r\n          timestamp: Date.now(),\r\n        }\r\n        localStorage.setItem(\r\n          GLOBAL_PLAYER_STORAGE_KEY,\r\n          JSON.stringify(updatedState),\r\n        )\r\n      } catch (err) {\r\n        console.error('Failed to save global player state:', err)\r\n        toast.error('Failed to save player state')\r\n      }\r\n    }, 1000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [globalPlayerState])\r\n\r\n  const addToGlobalPlayer = (src: string, trackName?: string) => {\r\n    const newState: GlobalPlayerState = {\r\n      src,\r\n      trackName,\r\n      currentTime: 0,\r\n      volume: 1,\r\n      playbackRate: 1,\r\n      timestamp: Date.now(),\r\n    }\r\n\r\n    setGlobalPlayerState(newState)\r\n    setIsVisible(true)\r\n\r\n    try {\r\n      localStorage.setItem(GLOBAL_PLAYER_STORAGE_KEY, JSON.stringify(newState))\r\n    } catch (err) {\r\n      console.error('Failed to save global player state:', err)\r\n      toast.error('Failed to save player state')\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setIsVisible(false)\r\n    setGlobalPlayerState(null)\r\n    localStorage.removeItem(GLOBAL_PLAYER_STORAGE_KEY)\r\n  }\r\n\r\n  return (\r\n    <GlobalPlayerContext.Provider\r\n      value={{ addToGlobalPlayer, isGlobalPlayerVisible: isVisible }}\r\n    >\r\n      {children}\r\n      {isVisible && globalPlayerState && (\r\n        <GlobalPlayerComponent\r\n          externalAudioUrlFn={externalAudioUrlFn}\r\n          playerState={globalPlayerState}\r\n          onClose={handleClose}\r\n        />\r\n      )}\r\n    </GlobalPlayerContext.Provider>\r\n  )\r\n}\r\n","import { createContext } from 'react'\r\n\r\nexport type GlobalPlayerContextType = {\r\n  addToGlobalPlayer: (src: string, trackName?: string) => void\r\n  isGlobalPlayerVisible: boolean\r\n}\r\n\r\nexport const GlobalPlayerContext =\r\n  createContext<GlobalPlayerContextType | null>(null)\r\n","import { useContext } from 'react'\r\nimport {\r\n  GlobalPlayerContext,\r\n  type GlobalPlayerContextType,\r\n} from './GlobalPlayerContext'\r\n\r\nexport function useGlobalPlayer(): GlobalPlayerContextType {\r\n  const context = useContext(GlobalPlayerContext)\r\n  if (!context) {\r\n    throw new Error(\r\n      'useGlobalPlayer must be used within a GlobalPlayerProvider',\r\n    )\r\n  }\r\n  return context\r\n}\r\n","import { AudioPlaybackWithBlob } from '@/audio/playback/AudioPlaybackWithBlob'\nimport { useGlobalPlayer } from '@/audio/playback/useGlobalPlayer'\nimport { Button } from '@/components/ui/button'\nimport { cn } from '@/lib/utils'\nimport { SingleFileUploaderHeadless } from '@battlemagedotapp/convex-upload-helpers'\nimport { ExternalLink, LoaderCircle, Music, Trash } from 'lucide-react'\nimport ConfirmAlertDialog from '../ConfirmAlertDialog'\n\ntype SingleAudioUploaderProps = {\n  file?: string | null\n  setFile: (f: string) => void\n  removeFile: () => void\n  maxSizeInMB?: number\n  allowedTypes?: string[]\n  successMessage?: string\n  errorMessage?: string\n  className?: string\n  externalAudioUrlFn?: (url: string) => string\n  closePlayer?: () => void\n}\n\nexport function SingleAudioUploader({\n  file,\n  setFile,\n  removeFile,\n  maxSizeInMB,\n  allowedTypes = [],\n  successMessage = 'Audio file uploaded successfully!',\n  errorMessage = 'Failed to upload audio file',\n  className,\n  externalAudioUrlFn,\n  closePlayer,\n}: SingleAudioUploaderProps) {\n  const { addToGlobalPlayer } = useGlobalPlayer()\n  return (\n    <SingleFileUploaderHeadless\n      file={file}\n      setFile={setFile}\n      removeFile={removeFile}\n      maxSizeInMB={maxSizeInMB}\n      allowedTypes={allowedTypes}\n      successMessage={successMessage}\n      errorMessage={errorMessage}\n    >\n      {({ isUploading, triggerFileSelect, handleFileDelete, hasFile }) => (\n        <div className={cn('relative', className)}>\n          {!hasFile && (\n            <Button\n              disabled={isUploading}\n              variant=\"default\"\n              size=\"default\"\n              className=\"w-fit\"\n              onClick={triggerFileSelect}\n            >\n              {isUploading ? (\n                <LoaderCircle className=\"h-4 w-4 animate-spin\" />\n              ) : (\n                <Music className=\"h-4 w-4\" />\n              )}\n              {isUploading ? 'Uploading...' : 'Add audio'}\n            </Button>\n          )}\n\n          {file && (\n            <div className=\"relative p-4 w-full min-w-[332px] flex flex-col items-center gap-2\">\n              <AudioPlaybackWithBlob\n                src={file}\n                externalAudioUrlFn={externalAudioUrlFn}\n                closePlayer={closePlayer}\n              />\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                size=\"sm\"\n                className=\"cursor-pointer hover:bg-primary hover:text-primary-foreground\"\n                onClick={() => addToGlobalPlayer(file, 'Uploaded Audio')}\n                title=\"Open in global player\"\n              >\n                <ExternalLink className=\"h-4 w-4\" />\n                Open in player\n              </Button>\n              <div className=\"absolute top-0 right-0 flex gap-1\">\n                <ConfirmAlertDialog\n                  trigger={(props) => (\n                    <Button\n                      {...props}\n                      type=\"button\"\n                      variant=\"secondary\"\n                      size=\"icon\"\n                      className=\"cursor-pointer hover:bg-destructive hover:text-destructive-foreground\"\n                    >\n                      <Trash className=\"h-4 w-4\" />\n                    </Button>\n                  )}\n                  title=\"Delete audio\"\n                  description=\"Are you sure you want to delete this audio file? This action cannot be undone.\"\n                  confirmLabel=\"Delete\"\n                  cancelLabel=\"Cancel\"\n                  onConfirm={handleFileDelete}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </SingleFileUploaderHeadless>\n  )\n}\n\nexport default SingleAudioUploader\n\n","import {\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n  AlertDialogTrigger,\r\n  AlertDialog as BaseAlertDialog,\r\n} from '@/components/ui/alert-dialog'\r\nimport * as React from 'react'\r\n\r\ntype ConfirmAlertDialogProps = {\r\n  title?: string\r\n  description?: string\r\n  trigger?:\r\n    | React.ReactNode\r\n    | ((\r\n        props: React.ComponentProps<typeof AlertDialogTrigger>,\r\n      ) => React.ReactNode)\r\n  onConfirm: () => void\r\n  confirmLabel?: string\r\n  cancelLabel?: string\r\n}\r\n\r\nexport function ConfirmAlertDialog({\r\n  title = 'Are you sure?',\r\n  description = 'This action cannot be undone.',\r\n  trigger,\r\n  onConfirm,\r\n  confirmLabel = 'Continue',\r\n  cancelLabel = 'Cancel',\r\n}: ConfirmAlertDialogProps) {\r\n  return (\r\n    <BaseAlertDialog>\r\n      {trigger ? (\r\n        typeof trigger === 'function' ? (\r\n          <AlertDialogTrigger asChild>\r\n            {trigger({} as React.ComponentProps<typeof AlertDialogTrigger>)}\r\n          </AlertDialogTrigger>\r\n        ) : (\r\n          <AlertDialogTrigger asChild>{trigger}</AlertDialogTrigger>\r\n        )\r\n      ) : null}\r\n      <AlertDialogContent>\r\n        <AlertDialogHeader>\r\n          <AlertDialogTitle>{title}</AlertDialogTitle>\r\n          <AlertDialogDescription>{description}</AlertDialogDescription>\r\n        </AlertDialogHeader>\r\n        <AlertDialogFooter>\r\n          <AlertDialogCancel>{cancelLabel}</AlertDialogCancel>\r\n          <AlertDialogAction onClick={onConfirm}>\r\n            {confirmLabel}\r\n          </AlertDialogAction>\r\n        </AlertDialogFooter>\r\n      </AlertDialogContent>\r\n    </BaseAlertDialog>\r\n  )\r\n}\r\n\r\nexport default ConfirmAlertDialog\r\n"],"mappings":"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","names":["React","jsx","jsx","jsxs","currentTime","wavesurferObj","initialVolume","initialPlaybackRate","initialCurrentTime","initialPlaying","useEffect","useMemo","useState","jsx","jsxs","useMemo","useState","useEffect","useEffect","useState","jsx","jsxs","useState","useEffect","jsx","jsxs","jsx","jsxs"]}