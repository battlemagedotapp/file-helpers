{"version":3,"sources":["../../src/components/ui/button.tsx","../../src/lib/utils.ts","../../src/image/view/ImageViewProviderContext.tsx","../../src/image/view/ImageView.tsx","../../src/image/view/ImageViewProvider.tsx"],"sourcesContent":["import { Slot } from '@radix-ui/react-slot'\r\nimport { cva, type VariantProps } from 'class-variance-authority'\r\nimport * as React from 'react'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          'bg-primary text-primary-foreground shadow-xs hover:bg-primary/90',\r\n        destructive:\r\n          'bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60',\r\n        outline:\r\n          'border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50',\r\n        secondary:\r\n          'bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80',\r\n        ghost:\r\n          'hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50',\r\n        link: 'text-primary underline-offset-4 hover:underline',\r\n      },\r\n      size: {\r\n        default: 'h-9 px-4 py-2 has-[>svg]:px-3',\r\n        sm: 'h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5',\r\n        lg: 'h-10 rounded-md px-6 has-[>svg]:px-4',\r\n        icon: 'size-9',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n      size: 'default',\r\n    },\r\n  },\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<'button'> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean\r\n  }) {\r\n  const Comp = asChild ? Slot : 'button'\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n","import { clsx, type ClassValue } from 'clsx'\r\nimport { twMerge } from 'tailwind-merge'\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n","import { createContext, useContext } from 'react'\r\n\r\nexport type TransformImageUrlFn = (storageId: string) => string\r\n\r\nconst defaultTransform: TransformImageUrlFn = (storageId: string) => storageId\r\n\r\nconst ImageViewContext = createContext<{\r\n  transformImageUrlFn: TransformImageUrlFn\r\n}>({\r\n  transformImageUrlFn: defaultTransform,\r\n})\r\n\r\nexport const useImageView = () => useContext(ImageViewContext)\r\n\r\nexport default ImageViewContext\r\n","import { Button } from '@/components/ui/button'\r\nimport { useImageView } from '@/image/view/ImageViewProviderContext'\r\nimport { Ellipsis, X } from 'lucide-react'\r\nimport { useState } from 'react'\r\n\r\ntype ImageViewProps = {\r\n  src: string\r\n  alt: string\r\n  canExpand?: boolean\r\n}\r\n\r\nexport function ImageView({ src, alt, canExpand = true }: ImageViewProps) {\r\n  const [status, setStatus] = useState<'loading' | 'loaded' | 'error'>(\r\n    'loading',\r\n  )\r\n  const [imgClassNames, setImgClassNames] = useState<object>({\r\n    width: '100%',\r\n    height: '100%',\r\n    objectFit: 'cover',\r\n  })\r\n  const [isOpen, setIsOpen] = useState<boolean>(false)\r\n  const { transformImageUrlFn } = useImageView()\r\n  const imageSrc = transformImageUrlFn ? transformImageUrlFn(src) : src\r\n  console.log(imageSrc)\r\n  return (\r\n    <div className=\"w-full h-full relative\">\r\n      <img\r\n        src={imageSrc}\r\n        alt={alt}\r\n        style={imgClassNames}\r\n        className={canExpand ? 'hover:cursor-pointer' : ''}\r\n        onClick={() => {\r\n          if (canExpand && status === 'loaded') setIsOpen(true)\r\n        }}\r\n        onLoad={() => {\r\n          setStatus('loaded')\r\n          setImgClassNames({\r\n            width: '100%',\r\n            height: '100%',\r\n            objectFit: 'cover',\r\n          })\r\n        }}\r\n        onError={() => {\r\n          setStatus('error')\r\n          setImgClassNames({\r\n            width: '0',\r\n            height: '0',\r\n            objectFit: 'cover',\r\n          })\r\n        }}\r\n      />\r\n      {status === 'loading' && (\r\n        <div className=\"absolute inset-0 flex items-center justify-center\">\r\n          <Ellipsis className=\"h-4 w-4 animate-pulse\" />\r\n        </div>\r\n      )}\r\n      {status === 'error' && (\r\n        <div className=\"absolute inset-0 flex items-center justify-center\">\r\n          <X className=\"h-4 w-4\" />\r\n        </div>\r\n      )}\r\n\r\n      {isOpen && status === 'loaded' && (\r\n        <div\r\n          className=\"fixed inset-0  border backdrop-blur-2xl z-50 flex items-center justify-center\"\r\n          onClick={() => setIsOpen(false)}\r\n        >\r\n          <div\r\n            className=\"relative max-w-full max-h-full p-4\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"secondary\"\r\n              size=\"icon\"\r\n              className=\"cursor-pointer absolute top-2 right-2 hover:bg-primary hover:text-primary-foreground\"\r\n              onClick={() => setIsOpen(false)}\r\n            >\r\n              <X className=\"h-4 w-4\" />\r\n            </Button>\r\n            <img\r\n              src={imageSrc}\r\n              alt={alt}\r\n              className=\"max-w-[100vw] max-h-[90vh] object-contain\"\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import ImageViewContext, {\r\n  type TransformImageUrlFn,\r\n} from '@/image/view/ImageViewProviderContext'\r\nimport React from 'react'\r\n\r\ntype ImageViewProviderProps = {\r\n  transformImageUrlFn?: TransformImageUrlFn\r\n  children: React.ReactNode\r\n}\r\n\r\nexport function ImageViewProvider({\r\n  transformImageUrlFn,\r\n  children,\r\n}: ImageViewProviderProps) {\r\n  const fn = transformImageUrlFn ?? ((id: string) => id)\r\n  return (\r\n    <ImageViewContext.Provider value={{ transformImageUrlFn: fn }}>\r\n      {children}\r\n    </ImageViewContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ImageViewProvider\r\n"],"mappings":"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","names":["jsx","jsx"]}