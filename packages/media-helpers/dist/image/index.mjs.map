{"version":3,"sources":["../../src/components/ui/button.tsx","../../src/lib/utils.ts","../../src/image/view/ImageViewProviderContext.tsx","../../src/image/view/ImageView.tsx","../../src/image/view/ImageViewProvider.tsx"],"sourcesContent":["import { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n","import { clsx, type ClassValue } from 'clsx'\r\nimport { twMerge } from 'tailwind-merge'\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n","import { createContext, useContext } from 'react'\r\n\r\nexport type TransformImageUrlFn = (storageId: string) => string\r\n\r\nconst defaultTransform: TransformImageUrlFn = (storageId: string) => storageId\r\n\r\nconst ImageViewContext = createContext<{\r\n  transformImageUrlFn: TransformImageUrlFn\r\n}>({\r\n  transformImageUrlFn: defaultTransform,\r\n})\r\n\r\nexport const useImageView = () => useContext(ImageViewContext)\r\n\r\nexport default ImageViewContext\r\n","import { Button } from '@/components/ui/button'\nimport { useImageView } from '@/image/view/ImageViewProviderContext'\nimport { Ellipsis, X } from 'lucide-react'\nimport { useState } from 'react'\n\ntype ImageViewProps = {\n    src: string\n    alt: string\n    canExpand?: boolean\n}\n\nexport function ImageView({ src, alt, canExpand = true }: ImageViewProps) {\n    const [status, setStatus] = useState<'loading' | 'loaded' | 'error'>(\n        'loading',\n    )\n    const [imgClassNames, setImgClassNames] = useState<object>({\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover',\n    })\n    const [isOpen, setIsOpen] = useState<boolean>(false)\n    const { transformImageUrlFn } = useImageView()\n    const imageSrc = transformImageUrlFn ? transformImageUrlFn(src) : src\n    console.log(imageSrc)\n    return (\n        <div className=\"w-full h-full relative\">\n            <img\n                src={imageSrc}\n                alt={alt}\n                style={imgClassNames}\n                className={canExpand ? 'hover:cursor-pointer' : ''}\n                onClick={() => {\n                    if (canExpand && status === 'loaded') setIsOpen(true)\n                }}\n                onLoad={() => {\n                    setStatus('loaded')\n                    setImgClassNames({\n                        width: '100%',\n                        height: '100%',\n                        objectFit: 'cover',\n                    })\n                }}\n                onError={() => {\n                    setStatus('error')\n                    setImgClassNames({\n                        width: '0',\n                        height: '0',\n                        objectFit: 'cover',\n                    })\n                }}\n            />\n            {status === 'loading' && (\n                <div className=\"absolute inset-0 flex items-center justify-center\">\n                    <Ellipsis className=\"h-4 w-4 animate-pulse\" />\n                </div>\n            )}\n            {status === 'error' && (\n                <div className=\"absolute inset-0 flex items-center justify-center\">\n                    <X className=\"h-4 w-4\" />\n                </div>\n            )}\n\n            {isOpen && status === 'loaded' && (\n                <div\n                    className=\"fixed inset-0  border backdrop-blur-2xl z-50 flex items-center justify-center\"\n                    onClick={() => setIsOpen(false)}\n                >\n                    <div className=\"relative max-w-full max-h-full p-4\" onClick={(e) => e.stopPropagation()}>\n                        <Button\n                            type=\"button\"\n                            variant=\"secondary\"\n                            size=\"icon\"\n                            className=\"cursor-pointer absolute top-2 right-2 hover:bg-primary hover:text-primary-foreground\"\n                            onClick={() => setIsOpen(false)}\n                        >\n                            <X className=\"h-4 w-4\" />\n                        </Button>\n                        <img src={imageSrc} alt={alt} className=\"max-w-[100vw] max-h-[90vh] object-contain\" />\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n","import ImageViewContext, { type TransformImageUrlFn } from '@/image/view/ImageViewProviderContext'\r\nimport React from 'react'\r\n\r\ntype ImageViewProviderProps = {\r\n  transformImageUrlFn?: TransformImageUrlFn\r\n  children: React.ReactNode\r\n}\r\n\r\nexport function ImageViewProvider({\r\n  transformImageUrlFn,\r\n  children,\r\n}: ImageViewProviderProps) {\r\n  const fn = transformImageUrlFn ?? ((id: string) => id)\r\n  return (\r\n    <ImageViewContext.Provider value={{ transformImageUrlFn: fn }}>\r\n      {children}\r\n    </ImageViewContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ImageViewProvider\r\n"],"mappings":"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","names":["jsx","jsx"]}