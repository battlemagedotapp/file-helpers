{"version":3,"sources":["../src/components/ui/popover.tsx","../src/components/ui/slider.tsx","../src/audio/playback/AudioPlayback.tsx","../src/audio/playback/AudioPlaybackWithBlob.tsx","../src/audio/uploader/single-audio/SingleAudioUploader.tsx","../src/audio/uploader/ConfirmAlertDialog.tsx"],"sourcesContent":["import * as React from 'react'\r\nimport * as PopoverPrimitive from '@radix-ui/react-popover'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction Popover({\r\n  ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\r\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />\r\n}\r\n\r\nfunction PopoverTrigger({\r\n  ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\r\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />\r\n}\r\n\r\nfunction PopoverContent({\r\n  className,\r\n  align = 'center',\r\n  sideOffset = 4,\r\n  ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\r\n  return (\r\n    <PopoverPrimitive.Portal>\r\n      <PopoverPrimitive.Content\r\n        data-slot=\"popover-content\"\r\n        align={align}\r\n        sideOffset={sideOffset}\r\n        className={cn(\r\n          'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 origin-(--radix-popover-content-transform-origin) rounded-md border p-4 shadow-md outline-hidden',\r\n          className,\r\n        )}\r\n        {...props}\r\n      />\r\n    </PopoverPrimitive.Portal>\r\n  )\r\n}\r\n\r\nfunction PopoverAnchor({\r\n  ...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\r\n  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />\r\n}\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\r\n","import * as React from 'react'\r\nimport * as SliderPrimitive from '@radix-ui/react-slider'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction Slider({\r\n  className,\r\n  defaultValue,\r\n  value,\r\n  min = 0,\r\n  max = 100,\r\n  ...props\r\n}: React.ComponentProps<typeof SliderPrimitive.Root>) {\r\n  const _values = React.useMemo(\r\n    () =>\r\n      Array.isArray(value)\r\n        ? value\r\n        : Array.isArray(defaultValue)\r\n          ? defaultValue\r\n          : [min, max],\r\n    [value, defaultValue, min, max],\r\n  )\r\n\r\n  return (\r\n    <SliderPrimitive.Root\r\n      data-slot=\"slider\"\r\n      defaultValue={defaultValue}\r\n      value={value}\r\n      min={min}\r\n      max={max}\r\n      className={cn(\r\n        'relative flex w-full touch-none items-center select-none data-[disabled]:opacity-50 data-[orientation=vertical]:h-full data-[orientation=vertical]:min-h-44 data-[orientation=vertical]:w-auto data-[orientation=vertical]:flex-col',\r\n        className,\r\n      )}\r\n      {...props}\r\n    >\r\n      <SliderPrimitive.Track\r\n        data-slot=\"slider-track\"\r\n        className={cn(\r\n          'bg-muted relative grow overflow-hidden rounded-full data-[orientation=horizontal]:h-1.5 data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-1.5',\r\n        )}\r\n      >\r\n        <SliderPrimitive.Range\r\n          data-slot=\"slider-range\"\r\n          className={cn(\r\n            'bg-primary absolute data-[orientation=horizontal]:h-full data-[orientation=vertical]:w-full',\r\n          )}\r\n        />\r\n      </SliderPrimitive.Track>\r\n      {Array.from({ length: _values.length }, (_, index) => (\r\n        <SliderPrimitive.Thumb\r\n          data-slot=\"slider-thumb\"\r\n          key={index}\r\n          className=\"border-primary bg-background ring-ring/50 block size-4 shrink-0 rounded-full border shadow-sm transition-[color,box-shadow] hover:ring-4 focus-visible:ring-4 focus-visible:outline-hidden disabled:pointer-events-none disabled:opacity-50\"\r\n        />\r\n      ))}\r\n    </SliderPrimitive.Root>\r\n  )\r\n}\r\n\r\nexport { Slider }\r\n","import { Button } from '@/components/ui/button'\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from '@/components/ui/popover'\r\nimport { Slider } from '@/components/ui/slider'\r\nimport { Pause, Play, Redo, Undo, Volume2, VolumeX } from 'lucide-react'\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport WaveSurfer from 'wavesurfer.js'\r\n\r\ntype AudioSource =\r\n  | {\r\n      mode: 'url'\r\n      url: string\r\n      externalAudioUrlFn?: (url: string) => string\r\n    }\r\n  | {\r\n      mode: 'blob'\r\n      blob: Blob\r\n    }\r\n\r\ntype AudioPlaybackProps = {\r\n  src: AudioSource\r\n  externalAudioUrlFn?: (url: string) => string\r\n  trackId?: string\r\n  trackName?: string\r\n  initialVolume?: number\r\n  initialPlaybackRate?: number\r\n  initialCurrentTime?: number\r\n  initialPlaying?: boolean\r\n}\r\n\r\nconst speeds = [0.5, 0.75, 1, 1.25, 1.5, 2]\r\n\r\nexport function AudioPlayback({\r\n  src,\r\n  externalAudioUrlFn,\r\n  trackId,\r\n  trackName,\r\n  initialVolume = 1,\r\n  initialPlaybackRate = 1,\r\n  initialCurrentTime = 0,\r\n  initialPlaying = false,\r\n}: AudioPlaybackProps) {\r\n  const timelineRef = useRef(null)\r\n  const [currentTime, setCurrentTime] = useState<number>(initialCurrentTime)\r\n  const [wavesurferObj, setWavesurferObj] = useState<WaveSurfer>()\r\n  const [volume, setVolume] = useState<number>(initialVolume)\r\n  const [playing, setPlaying] = useState(initialPlaying)\r\n  const [duration, setDuration] = useState<number>(0)\r\n  const [playbackRate, setPlaybackRate] = useState<number>(initialPlaybackRate)\r\n\r\n  useEffect(() => {\r\n    if (timelineRef.current && !wavesurferObj) {\r\n      setWavesurferObj(\r\n        WaveSurfer.create({\r\n          container: timelineRef.current,\r\n          cursorColor: 'violet',\r\n          waveColor: '#211027',\r\n          progressColor: '#69207F',\r\n          height: 'auto',\r\n          normalize: true,\r\n          fillParent: true,\r\n        }),\r\n      )\r\n    }\r\n  }, [wavesurferObj])\r\n\r\n  useEffect(() => {\r\n    if (src && wavesurferObj) {\r\n      if (src.mode === 'url') {\r\n        if (externalAudioUrlFn) {\r\n          wavesurferObj.load(externalAudioUrlFn(src.url))\r\n        } else {\r\n          wavesurferObj.load(src.url)\r\n        }\r\n      } else if (src.mode === 'blob') {\r\n        wavesurferObj.loadBlob(src.blob)\r\n      }\r\n\r\n      updatePlaybackState({\r\n        wavesurferObj,\r\n        initialVolume,\r\n        initialPlaybackRate,\r\n        initialCurrentTime,\r\n        initialPlaying,\r\n      })\r\n    }\r\n  }, [\r\n    src,\r\n    wavesurferObj,\r\n    externalAudioUrlFn,\r\n    initialVolume,\r\n    initialPlaybackRate,\r\n    initialCurrentTime,\r\n    initialPlaying,\r\n  ])\r\n\r\n  useEffect(() => {\r\n    if (wavesurferObj) {\r\n      const handleReady = () => {\r\n        wavesurferObj.pause()\r\n        setDuration(wavesurferObj.getDuration())\r\n      }\r\n\r\n      const handlePlay = () => {\r\n        setPlaying(true)\r\n      }\r\n\r\n      const handleFinish = () => {\r\n        setPlaying(false)\r\n      }\r\n\r\n      const handleTimeUpdate = (currentTime: number) => {\r\n        setCurrentTime(currentTime)\r\n      }\r\n\r\n      wavesurferObj.on('ready', handleReady)\r\n      wavesurferObj.on('play', handlePlay)\r\n      wavesurferObj.on('finish', handleFinish)\r\n      wavesurferObj.on('timeupdate', handleTimeUpdate)\r\n\r\n      return () => {\r\n        wavesurferObj.destroy()\r\n      }\r\n    }\r\n  }, [wavesurferObj])\r\n\r\n  useEffect(() => {\r\n    if (wavesurferObj) wavesurferObj.setVolume(volume)\r\n  }, [volume, wavesurferObj])\r\n\r\n  function updatePlaybackState({\r\n    wavesurferObj,\r\n    initialVolume,\r\n    initialPlaybackRate,\r\n    initialCurrentTime,\r\n    initialPlaying,\r\n  }: {\r\n    wavesurferObj: WaveSurfer\r\n    initialVolume: number\r\n    initialPlaybackRate: number\r\n    initialCurrentTime: number\r\n    initialPlaying: boolean\r\n  }) {\r\n    wavesurferObj.setVolume(initialVolume)\r\n    wavesurferObj.setPlaybackRate(initialPlaybackRate)\r\n    wavesurferObj.setTime(initialCurrentTime)\r\n    if (initialPlaying) {\r\n      wavesurferObj.play()\r\n      setPlaying(true)\r\n    } else {\r\n      wavesurferObj.pause()\r\n      setPlaying(false)\r\n    }\r\n  }\r\n\r\n  function handlePlayPause() {\r\n    wavesurferObj?.playPause()\r\n    setPlaying(!playing)\r\n  }\r\n\r\n  function handleVolumeSlider(value: number[]) {\r\n    setVolume(value[0] / 100)\r\n  }\r\n\r\n  function handleSpeedChange(newSpeed: number) {\r\n    if (wavesurferObj) {\r\n      wavesurferObj.setPlaybackRate(newSpeed)\r\n      setPlaybackRate(newSpeed)\r\n    }\r\n  }\r\n\r\n  function handleSkip(direction: 'forward' | 'backward') {\r\n    if (wavesurferObj && duration > 0) {\r\n      const skipTime = direction === 'forward' ? 10 : -10\r\n      const newTime = Math.max(0, Math.min(duration, currentTime + skipTime))\r\n      wavesurferObj.setTime(newTime)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      key={trackId}\r\n      className=\"bg-background border rounded-lg p-4 select-none\"\r\n    >\r\n      {!!trackName && (\r\n        <div className=\"flex flex-row items-center justify-center\">\r\n          <p className=\"text-sm font-semibold\">{trackName}</p>\r\n        </div>\r\n      )}\r\n      <div className=\"flex items-center justify-center space-x-2\">\r\n        <VolumeControl\r\n          volume={volume}\r\n          handleVolumeSlider={handleVolumeSlider}\r\n        />\r\n\r\n        <Button\r\n          variant=\"outline\"\r\n          size=\"icon\"\r\n          onClick={() => handleSkip('backward')}\r\n        >\r\n          <Undo className=\"h-4 w-4\" />\r\n        </Button>\r\n\r\n        <Button variant=\"default\" size=\"icon\" onClick={handlePlayPause}>\r\n          {playing ? (\r\n            <Pause className=\"h-6 w-6\" />\r\n          ) : (\r\n            <Play className=\"h-6 w-6\" />\r\n          )}\r\n        </Button>\r\n\r\n        <Button\r\n          variant=\"outline\"\r\n          size=\"icon\"\r\n          onClick={() => handleSkip('forward')}\r\n        >\r\n          <Redo className=\"h-4 w-4\" />\r\n        </Button>\r\n\r\n        <SpeedControl\r\n          playbackRate={playbackRate}\r\n          handleSpeedChange={handleSpeedChange}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"space-x-2 flex flex-row justify-center items-center text-sm text-muted-foreground\">\r\n        <div>{formatTime(currentTime)}</div>\r\n        <div ref={timelineRef} className=\"w-full h-8\" />\r\n        <div>{formatTime(duration)}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction formatTime(time: number) {\r\n  const minutes = Math.floor(time / 60)\r\n  const seconds = Math.floor(time % 60)\r\n  return `${minutes}:${seconds.toString().padStart(2, '0')}`\r\n}\r\n\r\nfunction VolumeControl({\r\n  volume,\r\n  handleVolumeSlider,\r\n}: {\r\n  volume: number\r\n  handleVolumeSlider: (value: number[]) => void\r\n}) {\r\n  return (\r\n    <Popover>\r\n      <PopoverTrigger asChild>\r\n        <Button variant=\"outline\" size=\"icon\">\r\n          {volume === 0 ? (\r\n            <VolumeX className=\"h-4 w-4\" />\r\n          ) : (\r\n            <Volume2 className=\"h-4 w-4\" />\r\n          )}\r\n        </Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent className=\"w-fit p-4\" align=\"end\">\r\n        <div className=\"space-y-4\">\r\n          <span className=\"text-sm font-medium\">Volume</span>\r\n          <Slider\r\n            value={[volume * 100]}\r\n            onValueChange={handleVolumeSlider}\r\n            max={100}\r\n            step={1}\r\n            className=\"w-full\"\r\n            orientation=\"vertical\"\r\n          />\r\n        </div>\r\n      </PopoverContent>\r\n    </Popover>\r\n  )\r\n}\r\n\r\nfunction SpeedControl({\r\n  playbackRate,\r\n  handleSpeedChange,\r\n}: {\r\n  playbackRate: number\r\n  handleSpeedChange: (newSpeed: number) => void\r\n}) {\r\n  return (\r\n    <Popover>\r\n      <PopoverTrigger asChild>\r\n        <Button variant=\"outline\" size=\"icon\">\r\n          {playbackRate}x\r\n        </Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent className=\"w-fit p-4\" align=\"end\">\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-sm font-medium\">Speed</span>\r\n          </div>\r\n          <div className=\"flex flex-col gap-2\">\r\n            {speeds.map((speed) => (\r\n              <Button\r\n                key={speed}\r\n                variant={playbackRate === speed ? 'default' : 'ghost'}\r\n                size=\"sm\"\r\n                onClick={() => handleSpeedChange(speed)}\r\n                className=\"text-xs\"\r\n              >\r\n                {speed}x\r\n              </Button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </PopoverContent>\r\n    </Popover>\r\n  )\r\n}\r\n","import { useEffect, useMemo, useState } from 'react'\r\nimport { AudioPlayback } from './AudioPlayback'\r\n\r\ntype AudioPlaybackWithBlobProps = {\r\n  src: string\r\n  externalAudioUrlFn?: (url: string) => string\r\n  trackId?: string\r\n  trackName?: string\r\n  initialVolume?: number\r\n  initialPlaybackRate?: number\r\n  initialCurrentTime?: number\r\n  initialPlaying?: boolean\r\n}\r\n\r\nasync function loadAudio(srcUrl: string) {\r\n  const response = await fetch(srcUrl)\r\n  const blob = await response.blob()\r\n  return [URL.createObjectURL(blob), blob] as const\r\n}\r\n\r\nexport function AudioPlaybackWithBlob({\r\n  src,\r\n  externalAudioUrlFn,\r\n  trackId,\r\n  trackName,\r\n  initialVolume,\r\n  initialPlaybackRate,\r\n  initialCurrentTime,\r\n  initialPlaying,\r\n}: AudioPlaybackWithBlobProps) {\r\n  const srcUrl = useMemo(\r\n    () => (externalAudioUrlFn ? externalAudioUrlFn(src) : src),\r\n    [externalAudioUrlFn, src],\r\n  )\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<Error | null>(null)\r\n  const [audioBlob, setAudioBlob] = useState<Blob | null>(null)\r\n  const [audioBlobUrl, setAudioBlobUrl] = useState<string | null>(null)\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    setError(null)\r\n    if (audioBlobUrl) {\r\n      URL.revokeObjectURL(audioBlobUrl)\r\n    }\r\n    loadAudio(srcUrl)\r\n      .then((res) => {\r\n        setAudioBlobUrl(res[0])\r\n        setAudioBlob(res[1])\r\n      })\r\n      .catch((err) => {\r\n        setError(err)\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false)\r\n      })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [srcUrl])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (audioBlobUrl) {\r\n        URL.revokeObjectURL(audioBlobUrl)\r\n      }\r\n    }\r\n  }, [audioBlobUrl])\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>\r\n  }\r\n\r\n  if (audioBlob && audioBlobUrl) {\r\n    return (\r\n      <AudioPlayback\r\n        src={{ mode: 'blob', blob: audioBlob }}\r\n        trackId={trackId}\r\n        trackName={trackName}\r\n        initialVolume={initialVolume}\r\n        initialPlaybackRate={initialPlaybackRate}\r\n        initialCurrentTime={initialCurrentTime}\r\n        initialPlaying={initialPlaying}\r\n      />\r\n    )\r\n  }\r\n  return <div>No audio source found</div>\r\n}\r\n","import { AudioPlaybackWithBlob } from '@/audio/playback/AudioPlaybackWithBlob'\r\nimport { Button } from '@/components/ui/button'\r\nimport { cn } from '@/lib/utils'\r\nimport { SingleFileUploaderHeadless } from '@battlemagedotapp/convex-upload-helpers'\r\nimport { LoaderCircle, Music, Trash } from 'lucide-react'\r\nimport ConfirmAlertDialog from '../ConfirmAlertDialog'\r\n\r\ntype SingleAudioUploaderProps = {\r\n  file?: string | null\r\n  setFile: (f: string) => void\r\n  removeFile: () => void\r\n  maxSizeInMB?: number\r\n  allowedTypes?: string[]\r\n  successMessage?: string\r\n  errorMessage?: string\r\n  className?: string\r\n  compact?: boolean\r\n}\r\n\r\nexport function SingleAudioUploader({\r\n  file,\r\n  setFile,\r\n  removeFile,\r\n  maxSizeInMB,\r\n  allowedTypes = [],\r\n  successMessage = 'Audio file uploaded successfully!',\r\n  errorMessage = 'Failed to upload audio file',\r\n  className,\r\n  compact = false,\r\n}: SingleAudioUploaderProps) {\r\n  return (\r\n    <SingleFileUploaderHeadless\r\n      file={file}\r\n      setFile={setFile}\r\n      removeFile={removeFile}\r\n      maxSizeInMB={maxSizeInMB}\r\n      allowedTypes={allowedTypes}\r\n      successMessage={successMessage}\r\n      errorMessage={errorMessage}\r\n    >\r\n      {({ isUploading, triggerFileSelect, handleFileDelete, hasFile }) => (\r\n        <div className={cn('relative', className)}>\r\n          {!hasFile && (\r\n            <Button\r\n              disabled={isUploading}\r\n              variant=\"default\"\r\n              size=\"default\"\r\n              className=\"w-fit\"\r\n              onClick={triggerFileSelect}\r\n            >\r\n              {isUploading ? (\r\n                <LoaderCircle className=\"h-4 w-4 animate-spin\" />\r\n              ) : (\r\n                <Music className=\"h-4 w-4\" />\r\n              )}\r\n              {isUploading ? 'Uploading...' : 'Add audio'}\r\n            </Button>\r\n          )}\r\n\r\n          {file && (\r\n            <div\r\n              className=\"relative p-4 w-full\"\r\n              style={{ minWidth: compact ? '332px' : '432px', flexShrink: 0 }}\r\n            >\r\n              <AudioPlaybackWithBlob src={file} />\r\n              <div className=\"absolute top-0 right-0\">\r\n                <ConfirmAlertDialog\r\n                  trigger={(props) => (\r\n                    <Button\r\n                      {...props}\r\n                      type=\"button\"\r\n                      variant=\"secondary\"\r\n                      size=\"icon\"\r\n                      className=\"cursor-pointer hover:bg-destructive hover:text-destructive-foreground\"\r\n                    >\r\n                      <Trash className=\"h-4 w-4\" />\r\n                    </Button>\r\n                  )}\r\n                  title=\"Delete audio\"\r\n                  description=\"Are you sure you want to delete this audio file? This action cannot be undone.\"\r\n                  confirmLabel=\"Delete\"\r\n                  cancelLabel=\"Cancel\"\r\n                  onConfirm={handleFileDelete}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </SingleFileUploaderHeadless>\r\n  )\r\n}\r\n\r\nexport default SingleAudioUploader\r\n","import {\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n  AlertDialogTrigger,\r\n  AlertDialog as BaseAlertDialog,\r\n} from '@/components/ui/alert-dialog'\r\nimport * as React from 'react'\r\n\r\ntype ConfirmAlertDialogProps = {\r\n  title?: string\r\n  description?: string\r\n  trigger?:\r\n    | React.ReactNode\r\n    | ((\r\n        props: React.ComponentProps<typeof AlertDialogTrigger>,\r\n      ) => React.ReactNode)\r\n  onConfirm: () => void\r\n  confirmLabel?: string\r\n  cancelLabel?: string\r\n}\r\n\r\nexport function ConfirmAlertDialog({\r\n  title = 'Are you sure?',\r\n  description = 'This action cannot be undone.',\r\n  trigger,\r\n  onConfirm,\r\n  confirmLabel = 'Continue',\r\n  cancelLabel = 'Cancel',\r\n}: ConfirmAlertDialogProps) {\r\n  return (\r\n    <BaseAlertDialog>\r\n      {trigger ? (\r\n        typeof trigger === 'function' ? (\r\n          <AlertDialogTrigger asChild>\r\n            {trigger({} as React.ComponentProps<typeof AlertDialogTrigger>)}\r\n          </AlertDialogTrigger>\r\n        ) : (\r\n          <AlertDialogTrigger asChild>{trigger}</AlertDialogTrigger>\r\n        )\r\n      ) : null}\r\n      <AlertDialogContent>\r\n        <AlertDialogHeader>\r\n          <AlertDialogTitle>{title}</AlertDialogTitle>\r\n          <AlertDialogDescription>{description}</AlertDialogDescription>\r\n        </AlertDialogHeader>\r\n        <AlertDialogFooter>\r\n          <AlertDialogCancel>{cancelLabel}</AlertDialogCancel>\r\n          <AlertDialogAction onClick={onConfirm}>\r\n            {confirmLabel}\r\n          </AlertDialogAction>\r\n        </AlertDialogFooter>\r\n      </AlertDialogContent>\r\n    </BaseAlertDialog>\r\n  )\r\n}\r\n\r\nexport default ConfirmAlertDialog\r\n"],"mappings":"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","names":["React","jsx","jsx","jsxs","currentTime","wavesurferObj","initialVolume","initialPlaybackRate","initialCurrentTime","initialPlaying","useEffect","useMemo","useState","jsx","jsxs","useMemo","useState","useEffect","jsx","jsxs","jsx","jsxs"]}